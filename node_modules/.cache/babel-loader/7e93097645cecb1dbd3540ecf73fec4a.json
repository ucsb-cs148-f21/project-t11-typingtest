{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\project-t11-typingtest\\\\src\\\\utils\\\\CodeCard.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst codeString = `vector<int> twoSum(vector<int>& nums, int target) {\n  int i,j;\n  for(i=0;i<nums.size()-1;i++)\n  {\n      for(j=i+1;j<nums.size();j++)\n      {\n          if(nums[i]+nums[j]==target)\n          {\n             return {i,j};\n          }\n      }\n  }\n  return {i,j};`;\nexport default function CodeCard() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 275\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 18\n        },\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"Coding problems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n          language: \"c++\",\n          style: docco,\n          children: codeString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"Given an array of integers nums\\xA0and an integer target, return indices of the two numbers such that they add up to target.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = CodeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCard\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/project-t11-typingtest/src/utils/CodeCard.js"],"names":["React","Box","Card","CardActions","CardContent","Button","Typography","SyntaxHighlighter","docco","codeString","CodeCard","minWidth","fontSize"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,KAAT,QAAsB,+CAAtB;;AAEA,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAZA;AAcA,eAAe,SAASC,QAAT,GAAoB;AACjC,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAkC,QAAA,KAAK,EAAC,gBAAxC;AAAyD,QAAA,YAAY,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAJF,eAME,QAAC,UAAD;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,QAAQ,EAAC,KAA5B;AAAkC,UAAA,KAAK,EAAEJ,KAAzC;AAAA,oBACCC;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;KApBuBC,Q","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst codeString = `vector<int> twoSum(vector<int>& nums, int target) {\r\n  int i,j;\r\n  for(i=0;i<nums.size()-1;i++)\r\n  {\r\n      for(j=i+1;j<nums.size();j++)\r\n      {\r\n          if(nums[i]+nums[j]==target)\r\n          {\r\n             return {i,j};\r\n          }\r\n      }\r\n  }\r\n  return {i,j};`\r\n\r\nexport default function CodeCard() {\r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 18 }} color=\"text.secondary\" gutterBottom>\r\n          Coding problems\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n        </Typography>\r\n        <Typography>\r\n            <SyntaxHighlighter language=\"c++\" style={docco}>\r\n            {codeString}\r\n            </SyntaxHighlighter>\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n        Given an array of integers numsÂ and an integer target, return indices of the two numbers such that they add up to target.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}