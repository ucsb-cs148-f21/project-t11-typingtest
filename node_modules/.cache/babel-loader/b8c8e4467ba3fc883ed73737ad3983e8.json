{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/jason/Desktop/project-t11-typingtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'@emotion/styled';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CircleContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  border-radius: 100%;\\n  position: relative;\"])));var PercentageContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  text-align: center,\"])));var StyledCircle=styled.circle(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  transform: rotate(-90deg);\\n  transform-origin: 50% 50%;\"])));// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\nvar Circle=function Circle(_ref){var percentage=_ref.percentage,width=_ref.width,strokeWidth=_ref.strokeWidth,fontSize=_ref.fontSize,fontColor=_ref.fontColor,fontFamily=_ref.fontFamily,primaryColor=_ref.primaryColor,secondaryColor=_ref.secondaryColor,fill=_ref.fill,hidePercentageText=_ref.hidePercentageText,strokeLinecap=_ref.strokeLinecap;var PI=3.14;var R=width/2-strokeWidth*2;var circumference=2*PI*R;var offset=circumference-percentage/100*circumference;var gradientId=\"\".concat(primaryColor[0]).concat(primaryColor[1]).replace(/#/g,'');return/*#__PURE__*/_jsxs(CircleContainer,{className:\"react-super-progressbar__base\",style:{height:\"\".concat(width,\"px\"),width:\"\".concat(width,\"px\")},children:[!hidePercentageText?/*#__PURE__*/_jsx(PercentageContainer,{className:\"react-super-progressbar__percentage-container\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"react-super-progressbars__percentage\",style:{fontSize:fontSize,fontFamily:fontFamily,color:fontColor},children:[percentage,\"%\"]})}):null,/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/_jsxs(\"linearGradient\",{id:gradientId,x1:\"0%\",y1:\"0%\",x2:\"100%\",y2:\"100%\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:primaryColor[0]}),/*#__PURE__*/_jsx(\"stop\",{offset:\"100%\",stopColor:primaryColor[1]})]}),/*#__PURE__*/_jsx(\"circle\",{strokeWidth:strokeWidth,fill:\"transparent\",r:R,cx:width/2,cy:width/2,stroke:secondaryColor,strokeDasharray:\"\".concat(circumference,\" \").concat(circumference)}),/*#__PURE__*/_jsx(StyledCircle,{strokeWidth:strokeWidth,fill:fill,r:R,cx:width/2,cy:width/2,stroke:\"url(#\".concat(gradientId,\")\"),strokeLinecap:strokeLinecap,strokeDasharray:\"\".concat(circumference,\" \").concat(circumference),strokeDashoffset:offset})]})]});};Circle.defaultProps={width:200,strokeWidth:5,strokeLinecap:'round',fontSize:'inherit',fontColor:'inherit',fontFamily:'inherit',primaryColor:['#00BBFF','#92D7F1'],secondaryColor:'transparent',fill:'transparent'};export default Circle;","map":{"version":3,"sources":["C:/Users/jason/Desktop/project-t11-typingtest/src/components/Circle.js"],"names":["React","styled","CircleContainer","div","PercentageContainer","StyledCircle","circle","Circle","percentage","width","strokeWidth","fontSize","fontColor","fontFamily","primaryColor","secondaryColor","fill","hidePercentageText","strokeLinecap","PI","R","circumference","offset","gradientId","replace","height","color","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\nconst CircleContainer = styled.div`\r\n  display: inline-block;\r\n  border-radius: 100%;\r\n  position: relative;`\r\nconst PercentageContainer = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center,`\r\nconst StyledCircle = styled.circle`\r\n  transform: rotate(-90deg);\r\n  transform-origin: 50% 50%;`\r\n// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\r\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\r\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\r\nconst Circle = ({\r\n  percentage,\r\n  width,\r\n  strokeWidth,\r\n  fontSize,\r\n  fontColor,\r\n  fontFamily,\r\n  primaryColor,\r\n  secondaryColor,\r\n  fill,\r\n  hidePercentageText,\r\n  strokeLinecap,\r\n}) => {\r\n  const PI = 3.14\r\n  const R = (width / 2) - (strokeWidth * 2)\r\n  let circumference = 2 * PI * R\r\n  let offset = circumference - percentage / 100 * circumference\r\n  let gradientId = `${primaryColor[0]}${primaryColor[1]}`.replace(/#/g, '')\r\n  return (\r\n    <CircleContainer\r\n      className=\"react-super-progressbar__base\"\r\n      style={{\r\n        height: `${width}px`,\r\n        width: `${width}px`,\r\n      }}\r\n    >\r\n      {!hidePercentageText ?\r\n        <PercentageContainer className=\"react-super-progressbar__percentage-container\">\r\n          <span\r\n            className=\"react-super-progressbars__percentage\"\r\n            style={{\r\n              fontSize,\r\n              fontFamily,\r\n              color: fontColor,\r\n            }}\r\n          >\r\n            {percentage}%\r\n          </span>\r\n        </PercentageContainer>\r\n        : null\r\n      }\r\n      <svg\r\n        width='100%'\r\n        height='100%'\r\n        version='1.1'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <linearGradient\r\n          id={gradientId}\r\n          x1='0%'\r\n          y1='0%'\r\n          x2='100%'\r\n          y2='100%'\r\n        >\r\n          <stop offset='0%' stopColor={primaryColor[0]}/>\r\n          <stop offset='100%' stopColor={primaryColor[1]}/>\r\n        </linearGradient>\r\n        <circle\r\n          strokeWidth={strokeWidth}\r\n          fill='transparent'\r\n          r={R}\r\n          cx={width / 2}\r\n          cy={width / 2}\r\n          stroke={secondaryColor}\r\n          strokeDasharray={`${circumference} ${circumference}`}\r\n        />\r\n        <StyledCircle\r\n          strokeWidth={strokeWidth}\r\n          fill={fill}\r\n          r={R}\r\n          cx={width / 2}\r\n          cy={width / 2}\r\n          stroke={`url(#${gradientId})`}\r\n          strokeLinecap={strokeLinecap}\r\n          strokeDasharray={`${circumference} ${circumference}`}\r\n          strokeDashoffset={offset}\r\n        />\r\n      </svg>\r\n    </CircleContainer>\r\n  )\r\n}\r\nCircle.propTypes = {\r\n  percentage: PropTypes.number.isRequired,\r\n  width: PropTypes.number,\r\n  strokeWidth: PropTypes.number,\r\n  strokeLinecap: PropTypes.oneOf(['round', 'square', 'butt']),\r\n  fontSize: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  fontFamily: PropTypes.string,\r\n  primaryColor: PropTypes.array,\r\n  secondaryColor: PropTypes.string,\r\n  fill: PropTypes.string,\r\n  hidePercentageText: PropTypes.bool,\r\n}\r\nCircle.defaultProps = {\r\n  width: 200,\r\n  strokeWidth: 5,\r\n  strokeLinecap: 'round',\r\n  fontSize: 'inherit',\r\n  fontColor: 'inherit',\r\n  fontFamily: 'inherit',\r\n  primaryColor: ['#00BBFF', '#92D7F1'],\r\n  secondaryColor: 'transparent',\r\n  fill: 'transparent',\r\n}\r\nexport default Circle"]},"metadata":{},"sourceType":"module"}