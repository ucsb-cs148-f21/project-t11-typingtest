{"ast":null,"code":"import*as React from'react';import Box from'@mui/material/Box';import Card from'@mui/material/Card';import CardActions from'@mui/material/CardActions';import CardContent from'@mui/material/CardContent';import Button from'@mui/material/Button';import Typography from'@mui/material/Typography';import SyntaxHighlighter from'react-syntax-highlighter';import{docco}from'react-syntax-highlighter/dist/esm/styles/hljs';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var codeString=\"vector<int> twoSum(vector<int>& nums, int target) {\\n  int i,j;\\n  for(i=0;i<nums.size()-1;i++)\\n  {\\n      for(j=i+1;j<nums.size();j++)\\n      {\\n          if(nums[i]+nums[j]==target)\\n          {\\n             return {i,j};\\n          }\\n      }\\n  }\\n  return {i,j};\";export default function CodeCard(){return/*#__PURE__*/_jsx(Card,{sx:{minWidth:275},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{sx:{fontSize:18},color:\"text.secondary\",gutterBottom:true,children:\"Coding problems\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"div\"}),/*#__PURE__*/_jsx(Typography,{children:/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"c++\",style:docco,children:codeString})}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Given an array of integers nums\\xA0and an integer target, return indices of the two numbers such that they add up to target.\"})]})});}","map":{"version":3,"sources":["C:/Users/jason/Desktop/project-t11-typingtest/src/utils/CodeCard.js"],"names":["React","Box","Card","CardActions","CardContent","Button","Typography","SyntaxHighlighter","docco","codeString","CodeCard","minWidth","fontSize"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0BAA9B,CACA,OAASC,KAAT,KAAsB,+CAAtB,C,wFAEA,GAAMC,CAAAA,UAAU,gRAAhB,CAcA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,mBACE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAV,uBACE,MAAC,WAAD,yBACE,KAAC,UAAD,EAAY,EAAE,CAAE,CAAEC,QAAQ,CAAE,EAAZ,CAAhB,CAAkC,KAAK,CAAC,gBAAxC,CAAyD,YAAY,KAArE,6BADF,cAIE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAC,KAAnC,EAJF,cAME,KAAC,UAAD,wBACI,KAAC,iBAAD,EAAmB,QAAQ,CAAC,KAA5B,CAAkC,KAAK,CAAEJ,KAAzC,UACCC,UADD,EADJ,EANF,cAWE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,0IAXF,GADF,EADF,CAmBD","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst codeString = `vector<int> twoSum(vector<int>& nums, int target) {\r\n  int i,j;\r\n  for(i=0;i<nums.size()-1;i++)\r\n  {\r\n      for(j=i+1;j<nums.size();j++)\r\n      {\r\n          if(nums[i]+nums[j]==target)\r\n          {\r\n             return {i,j};\r\n          }\r\n      }\r\n  }\r\n  return {i,j};`\r\n\r\nexport default function CodeCard() {\r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 18 }} color=\"text.secondary\" gutterBottom>\r\n          Coding problems\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n        </Typography>\r\n        <Typography>\r\n            <SyntaxHighlighter language=\"c++\" style={docco}>\r\n            {codeString}\r\n            </SyntaxHighlighter>\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n        Given an array of integers numsÂ and an integer target, return indices of the two numbers such that they add up to target.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}