{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hirish/imdeadweek/project-t11-typingtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'@emotion/styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CircleContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  border-radius: 100%;\\n  position: relative;\"])));var PercentageContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  text-align: center,\"])));var StyledCircle=styled.circle(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  transform: rotate(-90deg);\\n  transform-origin: 50% 50%;\"])));// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\nvar Circle=function Circle(_ref){var percentage=_ref.percentage,text=_ref.text,width=_ref.width,strokeWidth=_ref.strokeWidth,fontSize=_ref.fontSize,fontColor=_ref.fontColor,fontFamily=_ref.fontFamily,primaryColor=_ref.primaryColor,secondaryColor=_ref.secondaryColor,fill=_ref.fill,hidePercentageText=_ref.hidePercentageText,strokeLinecap=_ref.strokeLinecap;var PI=3.14;var R=width/2-strokeWidth*2;var circumference=2*PI*R;var offset=circumference-percentage/100*circumference;var gradientId=\"\".concat(primaryColor[0]).concat(primaryColor[1]).replace(/#/g,'');return/*#__PURE__*/_jsxs(CircleContainer,{className:\"react-super-progressbar__base\",style:{height:\"\".concat(width,\"px\"),width:\"\".concat(width,\"px\")},children:[!hidePercentageText?/*#__PURE__*/_jsx(PercentageContainer,{className:\"react-super-progressbar__percentage-container\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"react-super-progressbars__percentage\",style:{fontSize:fontSize,fontFamily:fontFamily,color:fontColor},children:[percentage,\"%\",/*#__PURE__*/_jsx(\"br\",{}),text]})}):null,/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/_jsxs(\"linearGradient\",{id:gradientId,x1:\"0%\",y1:\"0%\",x2:\"100%\",y2:\"100%\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:primaryColor[0]}),/*#__PURE__*/_jsx(\"stop\",{offset:\"100%\",stopColor:primaryColor[1]})]}),/*#__PURE__*/_jsx(\"circle\",{strokeWidth:strokeWidth,fill:\"transparent\",r:R,cx:width/2,cy:width/2,stroke:secondaryColor,strokeDasharray:\"\".concat(circumference,\" \").concat(circumference)}),/*#__PURE__*/_jsx(StyledCircle,{strokeWidth:strokeWidth,fill:fill,r:R,cx:width/2,cy:width/2,stroke:\"url(#\".concat(gradientId,\")\"),strokeLinecap:strokeLinecap,strokeDasharray:\"\".concat(circumference,\" \").concat(circumference),strokeDashoffset:offset})]})]});};Circle.defaultProps={width:365,strokeWidth:5,strokeLinecap:'round',fontSize:'inherit',fontColor:'inherit',fontFamily:'inherit',primaryColor:['#00BBFF','#92d7f1'],secondaryColor:'transparent',fill:'transparent'};export default Circle;","map":{"version":3,"sources":["/Users/hirish/imdeadweek/project-t11-typingtest/src/components/Circle.js"],"names":["React","styled","CircleContainer","div","PercentageContainer","StyledCircle","circle","Circle","percentage","text","width","strokeWidth","fontSize","fontColor","fontFamily","primaryColor","secondaryColor","fill","hidePercentageText","strokeLinecap","PI","R","circumference","offset","gradientId","replace","height","color","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nconst CircleContainer = styled.div`\n  display: inline-block;\n  border-radius: 100%;\n  position: relative;`\n\nconst PercentageContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center,`\n\nconst StyledCircle = styled.circle`\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;`\n// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\n\nconst Circle = ({\n  percentage,\n  text,\n  width,\n  strokeWidth,\n  fontSize,\n  fontColor,\n  fontFamily,\n  primaryColor,\n  secondaryColor,\n  fill,\n  hidePercentageText,\n  strokeLinecap,\n}) => {\n  const PI = 3.14\n  const R = (width / 2) - (strokeWidth * 2)\n\n  let circumference = 2 * PI * R\n  let offset = circumference - percentage / 100 * circumference\n  let gradientId = `${primaryColor[0]}${primaryColor[1]}`.replace(/#/g, '')\n\n  return (\n    <CircleContainer\n      className=\"react-super-progressbar__base\"\n      style={{\n        height: `${width}px`,\n        width: `${width}px`,\n      }}\n    >\n      {!hidePercentageText ?\n        <PercentageContainer className=\"react-super-progressbar__percentage-container\">\n          <span\n            className=\"react-super-progressbars__percentage\"\n            style={{\n              fontSize,\n              fontFamily,\n              color: fontColor,\n            }}\n          >\n            {percentage}%\n            <br/>\n            {text}\n          </span>\n        </PercentageContainer>\n        : null\n      }\n\n      <svg\n        width='100%'\n        height='100%'\n        version='1.1'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <linearGradient\n          id={gradientId}\n          x1='0%'\n          y1='0%'\n          x2='100%'\n          y2='100%'\n        >\n          <stop offset='0%' stopColor={primaryColor[0]}/>\n          <stop offset='100%' stopColor={primaryColor[1]}/>\n        </linearGradient>\n        <circle\n          strokeWidth={strokeWidth}\n          fill='transparent'\n          r={R}\n          cx={width / 2}\n          cy={width / 2}\n          stroke={secondaryColor}\n          strokeDasharray={`${circumference} ${circumference}`}\n        />\n        <StyledCircle\n          strokeWidth={strokeWidth}\n          fill={fill}\n          r={R}\n          cx={width / 2}\n          cy={width / 2}\n          stroke={`url(#${gradientId})`}\n          strokeLinecap={strokeLinecap}\n          strokeDasharray={`${circumference} ${circumference}`}\n          strokeDashoffset={offset}\n        />\n      </svg>\n    </CircleContainer>\n  )\n}\n\nCircle.propTypes = {\n  percentage: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  strokeLinecap: PropTypes.oneOf(['round', 'square', 'butt']),\n  fontSize: PropTypes.string,\n  fontColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  primaryColor: PropTypes.array,\n  secondaryColor: PropTypes.string,\n  fill: PropTypes.string,\n  hidePercentageText: PropTypes.bool,\n  text: PropTypes.string,\n}\n\nCircle.defaultProps = {\n  width: 365,\n  strokeWidth: 5,\n  strokeLinecap: 'round',\n  fontSize: 'inherit',\n  fontColor: 'inherit',\n  fontFamily: 'inherit',\n  primaryColor: ['#00BBFF', '#92d7f1'],\n  secondaryColor: 'transparent',\n  fill: 'transparent',\n}\n\nexport default Circle"]},"metadata":{},"sourceType":"module"}