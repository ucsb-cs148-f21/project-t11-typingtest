{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\project-t11-typingtest\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CheckingSignedIn from \"./pages/CheckingSignedIn\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Private from \"./pages/Private\";\nimport Practice from \"./pages/Practice\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport Language from \"./pages/ Language\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isSignedIn, setIsSignedIn] = useState(null);\n  const script = document.createElement(\"script\");\n  script.src = \"https://apis.google.com/js/platform.js\";\n\n  script.onload = () => initGoogleSignIn();\n\n  document.body.appendChild(script);\n\n  function initGoogleSignIn() {\n    window.gapi.load(\"auth2\", () => {\n      window.gapi.auth2.init({\n        client_id: process.env.REACT_APP_AUTH_CLIENT_ID\n      }).then(() => {\n        const authInstance = window.gapi.auth2.getAuthInstance();\n        const isSignedIn = authInstance.isSignedIn.get();\n        setIsSignedIn(isSignedIn);\n        authInstance.isSignedIn.listen(isSignedIn => {\n          setIsSignedIn(isSignedIn);\n        });\n      });\n    });\n    window.gapi.load(\"signin2\", () => {\n      window.gapi.signin2.render(\"login-button\", {\n        theme: \"dark\"\n      });\n    });\n  }\n\n  function PrivateRoute(props) {\n    const {\n      component,\n      ...rest\n    } = props;\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      component: isSignedIn ? component : Private\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isSignedIn !== null) {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/profile\",\n          component: Profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/practice\",\n          component: Practice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/language\",\n          component: Language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: PageNotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckingSignedIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"hXk5z2Hs+R3nSvbF616O/YsR9kQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/project-t11-typingtest/src/App.js"],"names":["React","useState","BrowserRouter","Route","Switch","CheckingSignedIn","Home","Profile","Private","Practice","PageNotFound","Language","App","isSignedIn","setIsSignedIn","script","document","createElement","src","onload","initGoogleSignIn","body","appendChild","window","gapi","load","auth2","init","client_id","process","env","REACT_APP_AUTH_CLIENT_ID","then","authInstance","getAuthInstance","get","listen","signin2","render","theme","PrivateRoute","props","component","rest"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport CheckingSignedIn from \"./pages/CheckingSignedIn\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Private from \"./pages/Private\";\r\nimport Practice from \"./pages/Practice\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport Language from \"./pages/ Language\";\r\n\r\nexport default function App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(null);\r\n  const script = document.createElement(\"script\");\r\n  script.src = \"https://apis.google.com/js/platform.js\";\r\n  script.onload = () => initGoogleSignIn();\r\n  document.body.appendChild(script);\r\n\r\n  function initGoogleSignIn() {\r\n    window.gapi.load(\"auth2\", () => {\r\n      window.gapi.auth2\r\n        .init({\r\n          client_id: process.env.REACT_APP_AUTH_CLIENT_ID,\r\n        })\r\n        .then(() => {\r\n          const authInstance = window.gapi.auth2.getAuthInstance();\r\n          const isSignedIn = authInstance.isSignedIn.get();\r\n          setIsSignedIn(isSignedIn);\r\n\r\n          authInstance.isSignedIn.listen((isSignedIn) => {\r\n            setIsSignedIn(isSignedIn);\r\n          });\r\n        });\r\n    });\r\n    window.gapi.load(\"signin2\", () => {\r\n      window.gapi.signin2.render(\"login-button\", {\r\n        theme: \"dark\",\r\n      });\r\n    });\r\n  }\r\n\r\n  function PrivateRoute(props) {\r\n    const { component, ...rest } = props;\r\n    return <Route {...rest} component={isSignedIn ? component : Private} />;\r\n  }\r\n\r\n  if (isSignedIn !== null) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/practice\" component={Practice} />\r\n          <Route exact path=\"/language\" component={Language} />\r\n          <Route path=\"/\" component={PageNotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  return <CheckingSignedIn />;\r\n}"]},"metadata":{},"sourceType":"module"}