{"version":3,"sources":["pages/CheckingSignedIn.js","utils/get-user.js","components/NavBar.js","components/Layout.js","images/video.mp4","components/HomeSection.js","pages/Home.js","images/doggo.jpg","pages/Profile.js","pages/Private.js","utils/WordCount.js","components/CodeList.js","components/TypingComponent.js","pages/Practice.js","pages/PageNotFound.js","utils/LangCard.js","pages/ Language.js","pages/Java.js","utils/CodePractice.js","App.js","index.js"],"names":["CheckingSignedInWrapper","styled","div","CheckingSignedIn","Navbar","bg","expand","Container","Brand","href","Spinner","animation","role","getUser","undefined","window","gapi","auth2","authInstance","getAuthInstance","isSignedIn","get","profile","currentUser","getBasicProfile","id","getId","fullName","getName","givenName","getGivenName","familyName","getFamilyName","imageUrl","getImageUrl","email","getEmail","signOut","NavBar","props","user","Toggle","Collapse","Nav","className","Link","NavDropdown","title","src","alt","style","width","height","Item","onClick","Layout","children","HomeSection","controls","autostart","autoPlay","Video","type","Home","Card","CardContent","Typography","sx","mb","variant","color","to","Doggo","img","Profile","JSON","stringify","DoggoImg","Login","React","Component","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CodeList","classes","useState","product","setProduct","search","setSearch","getProductData","a","axios","data","console","log","useEffect","placeholder","onChange","e","target","value","TableContainer","component","Paper","Table","TableHead","align","TableBody","filter","item","name","toLowerCase","includes","map","index","_id","scope","difficulty","TypingComponent","state","text","inputValue","lastLetter","words","completedWords","completed","startTime","timeElapsed","wpm","started","progress","lineCount","lineWCompleted","highlight_length","setText","split","x","i","obj","setState","startGame","Date","now","handleChange","length","currentWord","trim","newWords","slice","newCompletedWords","newLineWCompleted","calculateWPM","_handleKeyPress","key","newLineCount","diff","wordsTyped","Math","ceil","reduce","acc","word","this","floor","max","line","li_idx","w_idx","highlight","letter","l_idx","isCurrentWord","isWronglyTyped","shouldBeHighlighted","onKeyPress","autoFocus","Practice","ID","PageNotFound","langList","version","lang","gutterBottom","OutlinedCard","Box","m","px","Language","Java","CodePractice","match","fetchItem","params","setItem","code","setCode","setID","fetch","json","App","setIsSignedIn","script","document","createElement","PrivateRoute","rest","Private","onload","load","init","client_id","process","REACT_APP_AUTH_CLIENT_ID","then","listen","signin2","render","appendChild","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6a21b51d.chunk.js","sourcesContent":["import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport styled from \"styled-components\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\n\nconst CheckingSignedInWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n\nexport default function CheckingSignedIn() {\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"/\">ReactGoogleAuthStarter</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <CheckingSignedInWrapper>\n        <Spinner animation=\"border\" role=\"status\" />\n      </CheckingSignedInWrapper>\n    </>\n  );\n}\n","export default function getUser() {\n  if (window.gapi === undefined || window.gapi.auth2 === undefined) {\n    return null;\n  }\n\n  const authInstance = window.gapi.auth2.getAuthInstance();\n  const isSignedIn = authInstance.isSignedIn.get();\n\n  if (isSignedIn === false) {\n    return null;\n  }\n\n  const profile = authInstance.currentUser.get().getBasicProfile();\n  const user = {\n    id: profile.getId(),\n    fullName: profile.getName(),\n    givenName: profile.getGivenName(),\n    familyName: profile.getFamilyName(),\n    imageUrl: profile.getImageUrl(),\n    email: profile.getEmail(),\n    signOut: authInstance.signOut,\n  };\n\n  return user;\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nexport default function NavBar(props) {\n  const user = props.user;\n\n  return (\n    <Navbar data-testid=\"NavBar\" bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"/\">TypingTest</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/language\">Language</Nav.Link>\n            <Nav.Link href=\"/practice\">Practice</Nav.Link>\n            {user && <Nav.Link href=\"/profile\">Profile</Nav.Link>}\n          </Nav>\n          <Nav>\n            {!user ? (\n              <div id=\"login-button\" />\n            ) : (\n              <NavDropdown\n                title={\n                  <span>\n                    Hello, {user.fullName}{\" \"}\n                    <img\n                      src={user.imageUrl}\n                      alt=\"profile\"\n                      style={{ width: \"24px\", height: \"24px\" }}\n                    />{\" \"}\n                  </span>\n                }\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item onClick={user.signOut}>\n                  Logout\n                </NavDropdown.Item>\n              </NavDropdown>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}","import NavBar from \"./NavBar\";\n\nexport default function Layout(props) {\n  const user = props.user;\n\n  return (\n    <div>\n      <NavBar user={user} />\n      {props.children}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/video.17cf6613.mp4\";","import React from \"react\";\nimport './HomeSection.css'\nimport Video from \"../images/video.mp4\"; \n\nfunction HomeSection() {\n    return (\n        <div className='home-container'>\n            <video controls autostart autoPlay src={Video} type=\"video/mp4\" autoPlay loop muted />\n            <h1>TYPING TEST FOR PROGRAMMERS</h1>\n        </div>\n    )\n}\n\nexport default HomeSection","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nimport getUser from \"../utils/get-user\";\nimport Layout from \"../components/Layout\";\nimport { Card } from \"react-bootstrap\";\nimport CardContent from '@mui/material/CardContent';\nimport HomeSection from \"../components/HomeSection\";\nimport { Typography } from \"@mui/material\";\nimport \"./Home.css\"\nconst TextWrapper = styled.div`\n  width: 700px;\n  max-width: 100%;\n`;\n\nexport default function Home() {\n  const user = getUser();\n\n  return (\n    <Layout user={user}>\n      <HomeSection/>\n      <Card>\n        <CardContent>\n          <Typography sx={{mb:1.5}} variant=\"h5\" color= \"#3699cf\">\n            What is TypingTest?\n          </Typography>\n          <Typography variant='p'>\n          It's a webapp that helps improve coding speed and gauge coding level. We will include a clock and accuracy in our API. The user can choose the language and difficulty of the coding problems and we want to expand it into a more code learning web by adding some questions so users can think about while they are coding to improve the coding skills.\n          </Typography>\n        </CardContent> \n      </Card>\n      <Link to=\"/Language\">\n        <button type=\"button\" className = \"Navlink\">\n            Start Typing\n        </button>\n      </Link>\n    </Layout>\n  );\n}","export default __webpack_public_path__ + \"static/media/doggo.60600ade.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"react-bootstrap/Container\";\n\nimport Layout from \"../components/Layout\";\nimport getUser from \"../utils/get-user\";\nimport DoggoImg from \"../images/doggo.jpg\";\n\nconst Doggo = styled.img`\n  width: 500px;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport default function Profile() {\n  const user = getUser();\n\n  return (\n    <Layout user={user}>\n      <Container>\n        <h1>This is your Profile page!</h1>\n        <div>\n          Here's what this app knows about you based on your Google login:\n        </div>\n        <pre>{JSON.stringify(user, null, \"\\t\")}</pre>\n        <div>\n          Your name is \"{user.fullName}\" and your email is \"{user.email}.\"\n        </div>\n        <div>Google also thinks you'll like this picture :)</div>\n        <br />\n        <Doggo src={DoggoImg} />\n      </Container>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport getUser from \"../utils/get-user\";\n\nexport default function Login() {\n  const user = getUser();\n\n  return (\n    <Layout user={user}>\n      <Container>\n        <h1>This page is private!</h1>\n        <div>(meaning you have to login to view the page)</div>\n        <br />\n      </Container>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { TextField } from \"@mui/material\";\n\nexport default class  WordCount extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      firstValue: '',\n      secondValue: '',\n      needWords: '',\n      wordCount: '',\n      limWords: null,\n    }\n    this.firstHandle = this.firstHandle.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.secondHandle = this.secondHandle.bind(this)    \n  }\n  firstHandle(e){\n    this.setState({\n      firstValue: e.target.value\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    this.setState({\n      needWords: this.state.firstValue\n    })\n  }\n\n  secondHandle(event){\n    this.setState({\n      secondValue: event.target.value,\n      wordCount: event.target.value === '' ? 0 : this.state.secondValue.split(' ').length,\n    })\n\n  }\n\n  render(){\n    var result = this.state.wordCount;\n    return(\n     <div>\n        <TextField \n          data = {this.state.wordCount}\n          type=\"text\"\n          value={this.state.value}\n          onChange={this.secondHandle}\n          variant = \"outlined\"\n          color = \"primary\"\n          multiline\n          minRows = \"10\"\n          placeholder = \"Start typing\"\n          fullWidth>\n        </TextField>\n        <p>You have written {result} words</p>\n      </div>\n    );\n  }\n}","/*import React from 'react';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\n\nexport default class CodeList extends React.Component {\n    state = {\n        persons : [],\n    };\n\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/codesnippet/Java').then(res=> {\n            console.log(res);\n            this.setState({persons: res.data});\n        });\n    }\n\n\n    render(){\n        return this.state.persons.map(person => <li>{person.index}</li>);\n    }\n}*/\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Link} from 'react-router-dom';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst CodeList = () => {\n  const classes = useStyles();\n  const [product, setProduct] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getProductData = async () => {\n    try {\n      const data = await axios.get(\n        \"http://127.0.0.1:5000/codesnippet/Java\"\n      );\n      console.log(data.data);\n      setProduct(data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getProductData();\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Code</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search here\"\n        onChange={(e) => {\n          setSearch(e.target.value);\n        }}\n      />\n\n      {/* {product\n        .filter((item) => {\n          if (search == \"\") {\n            return item;\n          } else if (item.name.toLowerCase().includes(search.toLowerCase())) {\n            return item;\n          }\n        })\n        .map((item) => {\n          return (\n            <p>\n              {item.name} - {item.price}\n            </p>\n          );\n        })} */}\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Problem Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Problem Index</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {product\n              .filter((item) => {\n                if (search == \"\") {\n                  return item;\n                } else if (\n                  item.name.toLowerCase().includes(search.toLowerCase())\n                ) {\n                  return item;\n                }\n              })\n              .map((item, index) => {\n                return (\n                  <StyledTableRow key={item.name}>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/Java/${item._id}`}>{item.name}</Link>\n                    </StyledTableCell>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {item.difficulty}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default CodeList;","import React, { Component, useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nclass TypingComponent extends Component {\n  state = {\n    text: this.props.text,\n    inputValue: \"\",\n    lastLetter: \"\",\n    words: [],\n    completedWords: [],\n    completed: false,\n    startTime: undefined,\n    timeElapsed: 0,\n    wpm: 0,\n    started: false,\n    progress: 0,\n    lineCount: 0,\n    lineWCompleted: 0,\n    highlight_length: []\n  };\n  componentDidMount(){\n    //console.log(this.state.text)\n  }\n  setText = () => {\n    const wordsE = this.state.text.split(\" \");\n    const words = wordsE.filter(x => x != \"\");\n    //const test = this.state.text.split(\"\\n\");\n\n    for(var i = 0; i < this.state.text; i++) {\n      var obj = this.state.text[i];\n      console.log(obj)\n    }\n\n    //console.log(words);\n    this.setState({\n      words: words,\n      completedWords: []\n    });\n  };\n\n  startGame = () => {\n    this.setText();\n\n    this.setState({\n      started: true,\n      startTime: Date.now(),\n      completed: false,\n      progress: 0\n    });\n  };\n\n  handleChange = e => {\n    const { words, completedWords, lineWCompleted } = this.state;\n    const inputValue = e.target.value;\n    const lastLetter = inputValue[inputValue.length - 1];\n\n    const currentWord = words[0];\n    //console.log(currentWord, \"currentWord\");\n\n    // if space or '.', check the word\n    if (lastLetter === \" \") {\n      // check to see if it matches to the currentWord\n      // trim because it has the space\n      if (inputValue.trim() === currentWord) {\n        // remove the word from the wordsArray\n        // cleanUp the input\n        const newWords = [...words.slice(1)];\n        //console.log(newWords, \"newWords\");\n        //console.log(newWords.length, \"newWords.length\");\n        const newCompletedWords = [...completedWords, currentWord];\n        //console.log(newCompletedWords, \"newCompletedWords\");\n        //console.log(\"----------------\");\n        const newLineWCompleted = lineWCompleted+1;\n\n        // Get the total progress by checking how much words are left\n        const progress =\n          (newCompletedWords.length /\n            (newWords.length + newCompletedWords.length)) *\n          100;\n        this.setState({\n          words: newWords,\n          completedWords: newCompletedWords,\n          inputValue: \"\",\n          completed: newWords.length === 0,\n          progress: progress,\n          lineWCompleted: newLineWCompleted\n        });\n      }\n    } else {\n      this.setState({\n        inputValue: inputValue,\n        lastLetter: lastLetter\n      });\n      //console.log(this.state.inputValue, \"this.state.inputValue\");\n      //console.log(this.state.lastLetter, \"this.state.lastLetter\");\n      //console.log(\"================================\");\n    }\n\n    this.calculateWPM();\n  };\n\n  _handleKeyPress = (e) => {\n    const inputValue = e.target.value;\n    if (e.key === 'Enter'){\n      const { words, completedWords, lineCount, lineWCompleted } = this.state;\n\n      const currentWord = words[0];\n      //console.log(currentWord, \"currentWord\");\n      \n      if (currentWord == inputValue + \"\\n\"){\n        const newWords = [...words.slice(1)];\n        //console.log(newWords, \"newWords\");\n        //console.log(newWords.length, \"newWords.length\");\n        const newCompletedWords = [...completedWords, currentWord];\n        //console.log(newCompletedWords, \"newCompletedWords\");\n        //console.log(\"----------------\");\n        const newLineCount = lineCount+1;\n\n        // Get the total progress by checking how much words are left\n        const progress =\n          (newCompletedWords.length /\n            (newWords.length + newCompletedWords.length)) *\n          100;\n        this.setState({\n          words: newWords,\n          completedWords: newCompletedWords,\n          inputValue: \"\",\n          completed: newWords.length === 0,\n          progress: progress,\n          lineCount: newLineCount,\n          lineWCompleted: 0\n        });\n      }\n    }\n    this.calculateWPM();\n  } \n\n  calculateWPM = () => {\n    const { startTime, completedWords } = this.state;\n    const now = Date.now();\n    const diff = (now - startTime) / 1000 / 60; // 1000 ms / 60 s\n    //console.log(now, \"now\");\n    //console.log(startTime, \"startTime\");\n    //console.log(diff, \"diff\");\n    //console.log(\"**************\");\n\n    // every word is considered to have 5 letters\n    // so here we are getting all the letters in the words and divide them by 5\n    // \"my\" shouldn't be counted as same as \"deinstitutionalization\"\n    const wordsTyped = Math.ceil(\n      completedWords.reduce((acc, word) => (acc += word.length), 0) / 5\n    );\n    //console.log(completedWords, \"completedWords\");\n    //console.log(wordsTyped, \"wordsTyped\");\n    //console.log(\"+=+=+=+=+=+=\");\n\n    // calculating the wpm\n    const wpm = Math.ceil(wordsTyped / diff);\n\n    this.setState({\n      wpm: wpm,\n      timeElapsed: diff\n    });\n  };\n\n  render() {\n    const {\n      text,\n      inputValue,\n      completedWords,\n      wpm,\n      timeElapsed,\n      started,\n      completed,\n      progress,\n      lineCount,\n      lineWCompleted\n    } = this.state;\n\n    if (!started)\n      return (\n        <div className=\"container\">\n          <h2>Welcome to the Typing game</h2>\n          <p>\n            <strong>Rules:</strong> <br />\n            Type in the input field the highlighted word. <br />\n            The correct words will turn <span className=\"green\">green</span>.\n            <br />\n            Incorrect letters will turn <span className=\"red\">red</span>.\n            <br />\n            <br />\n            Have fun!\n          </p>\n          <button className=\"start-btn\" onClick={this.startGame}>\n            Start game\n          </button>\n        </div>\n      );\n\n    if (!text) return <p>Loading...</p>;\n\n    if (completed) {\n      return (\n        <div className=\"container\">\n          <h2>\n            Your WPM is <strong>{wpm}</strong>\n          </h2>\n          <button className=\"start-btn\" onClick={this.startGame}>\n            Play again\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"wpm\">\n          <strong>WPM: </strong>\n          {wpm}\n          <br />\n          <strong>Time: </strong>\n          {Math.floor(timeElapsed * 60)}s\n        </div>\n        <div className=\"container\">\n          <h4>Type the text below</h4>\n          <progress value={progress} max=\"100\" />\n          <p className=\"text\">\n            {text.split(\"\\n\").map((line, li_idx) => {\n              return(\n              <div key = {li_idx}>\n              {line.split(\" \").map((word, w_idx) => {\n                let highlight = false;\n                let currentWord = false;\n\n                // this means that the word is completed, so turn it green\n                if (lineWCompleted > w_idx || li_idx < lineCount) {\n                  highlight = true;\n                }\n\n                if (lineWCompleted === w_idx && lineCount == li_idx) {\n                  currentWord = true;\n                }\n\n                return (\n                  <span\n                    className={`word \n                                  ${highlight && \"green\"} \n                                  ${currentWord && \"underline\"}`}\n                    key={w_idx}\n                  >\n                    {word.split(\"\").map((letter, l_idx) => {\n                      const isCurrentWord = w_idx === lineWCompleted && li_idx == lineCount;\n                      const isWronglyTyped = letter !== inputValue[l_idx] && li_idx == lineCount;\n                      const shouldBeHighlighted = l_idx < inputValue.length && li_idx == lineCount;\n\n                      return (\n                        <span\n                          className={`letter ${\n                            isCurrentWord && shouldBeHighlighted\n                              ? isWronglyTyped\n                                ? \"red\"\n                                : \"green\"\n                              : \"\"\n                          }`}\n                          key={l_idx}\n                        >\n                          {letter}\n                        </span>\n                      );\n                    })}\n                  </span>\n                );\n              })}\n              </div>\n              );\n            })}\n            </p>\n          <input\n            type=\"text\"\n            onChange={this.handleChange}\n            onKeyPress={this._handleKeyPress}\n            value={inputValue}\n            // autoFocus={started ? 'true' : 'false'}\n            autoFocus={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TypingComponent;","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport getUser from \"../utils/get-user\";\nimport  Timer from \"../utils/Timer\";\nimport CodeCard from \"../utils/CodeCard\";\nimport WordCount from '../utils/WordCount'\nimport CodeList from \"../components/CodeList\";\nimport TypingComponent from \"../components/TypingComponent\";\n\n\nexport default function Practice() {\n    const user = getUser();\n    return (\n        <Layout user = {user}>\n            <Container>\n                <div>\n                    <TypingComponent ID='3687284161695356416'/>\n                </div>\n            </Container>\n        </Layout>\n    )\n}","import Container from \"react-bootstrap/Container\";\nimport Layout from \"../components/Layout\";\n\nexport default function PageNotFound() {\n  return (\n    <Layout>\n      <Container>\n        <h1>This page was not found :(</h1>\n      </Container>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\nimport \"./LangButton.css\";\n\nconst langs = [\n  {\n    id: 1,\n    name: 'C++',\n    version: 11\n   },\n  {\n    id: 2,\n    name: 'Python',\n    version: 3\n  },\n  {\n    id: 3,\n    name: 'Java',\n    version: 17\n   }\n]\n  \nconst langList = langs.map(lang => (\n  <Link to=\"/Java\">\n    <button type=\"button\" className=\"LangButton\">\n      <Typography sx={{ fontSize: 20 }} color='#3699cf' gutterBottom>\n        {lang.name}\n      </Typography>\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n        version.{lang.version}\n      </Typography>\n    </button>\n  </Link>\n))\n\nexport default function OutlinedCard() {\n  return (\n    <Box sx={{ width: 300, m: 10, px: 70}}>\n      {langList}\n    </Box>\n  );\n}","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport getUser from \"../utils/get-user\";\nimport LangCard from \"../utils/LangCard\";\n\nexport default function Language() {\n    const user = getUser();\n    return (\n        <Layout user={user}>\n        <LangCard/>\n        </Layout>\n\n    );\n}","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport getUser from \"../utils/get-user\";\nimport CodeList from \"../components/CodeList\";\n\nexport default function Java() {\n    const user = getUser();\n    return (\n        <Layout user = {user}>\n            <Container>\n                <div>\n                    <CodeList/>\n                </div>\n            </Container>\n        </Layout>\n    )\n}","import React, {useState, useEffect } from 'react';\nimport TypingComponent from '../components/TypingComponent';\n\nexport default function CodePractice(match) {\n\n\tuseEffect(() => {\n\t\tfetchItem();\n        console.log(match.match.params._id);\n\t}, []);\n\n\tconst [item, setItem] = useState([]); \n\tconst [code, setCode] = useState(\"\"); \n\tconst [_id, setID] = useState();\n    \n\tconst fetchItem = async () => {\n\t\tconst fetchItem = await fetch(`http://127.0.0.1:5000/codesnippet/Java`\n        );\n        const item = await fetchItem.json();\n        setItem(item);\n        console.log(item);\n\t\tconsole.log(item[0]);\n\t\tconsole.log(item[0].code);\n\t\t//console.log(item[match.match.params._id].code);\n\t\t//console.log(typeof item[0].code)\n\t\t//const code = item[match.match.params._id].code;\n\t\t//setCode(code)\n\t\tconsole.log(code);\n\t\tconsole.log(typeof code)\n\n\t\tfor(var i = 0; i < item.length; i++) {\n\t\t\tvar obj = item[i];\n\t\t\tif (obj._id  == match.match.params._id)\n\t\t\t{\n\t\t\t\tconsole.log(obj);\n\t\t\t\tsetCode(obj.code)\n\t\t\t\tsetID(obj._id)\n\t\t\t}\n\t\t}\n\t\tconsole.log(_id)\n\t}\n\tif(code != \"\"){\n\treturn (\n\t\t<div>\n\t\t\t<TypingComponent text={code}/>\n\t\t</div>\n\t);\n}\nreturn (\n\t<div></div>\n)\n}","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport CheckingSignedIn from \"./pages/CheckingSignedIn\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Private from \"./pages/Private\";\nimport Practice from \"./pages/Practice\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport Language from \"./pages/ Language\";\nimport Java from \"./pages/Java\";\nimport CodePractice from \"./utils/CodePractice\";\n\nexport default function App() {\n  const [isSignedIn, setIsSignedIn] = useState(null);\n  const script = document.createElement(\"script\");\n  script.src = \"https://apis.google.com/js/platform.js\";\n  script.onload = () => initGoogleSignIn();\n  document.body.appendChild(script);\n\n  function initGoogleSignIn() {\n    window.gapi.load(\"auth2\", () => {\n      window.gapi.auth2\n        .init({\n          client_id: process.env.REACT_APP_AUTH_CLIENT_ID,\n        })\n        .then(() => {\n          const authInstance = window.gapi.auth2.getAuthInstance();\n          const isSignedIn = authInstance.isSignedIn.get();\n          setIsSignedIn(isSignedIn);\n\n          authInstance.isSignedIn.listen((isSignedIn) => {\n            setIsSignedIn(isSignedIn);\n          });\n        });\n    });\n    window.gapi.load(\"signin2\", () => {\n      window.gapi.signin2.render(\"login-button\", {\n        theme: \"dark\",\n      });\n    });\n  }\n\n  function PrivateRoute(props) {\n    const { component, ...rest } = props;\n    return <Route {...rest} component={isSignedIn ? component : Private} />;\n  }\n\n  if (isSignedIn !== null) {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/practice\" component={Practice} />\n          <Route exact path=\"/language\" component={Language} />\n          <Route path=\"/java\" exact component={Java} />\n          <Route path=\"/java/:_id\" component={CodePractice}/>\n          <Route path=\"/\" component={PageNotFound} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n\n  return <CheckingSignedIn />;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}