{"version":3,"sources":["pages/CheckingSignedIn.js","utils/get-user.js","components/NavBar.js","components/Layout.js","images/video.mp4","components/HomeSection.js","pages/Home.js","images/doggo.jpg","pages/Profile.js","pages/Private.js","utils/WordCount.js","components/CodeList.js","components/TypingComponent.js","pages/Practice.js","pages/PageNotFound.js","utils/LangCard.js","pages/ Language.js","pages/Java.js","utils/CodePractice.js","App.js","index.js"],"names":["CheckingSignedInWrapper","styled","div","CheckingSignedIn","Navbar","bg","expand","Container","Brand","href","Spinner","animation","role","getUser","undefined","window","gapi","auth2","authInstance","getAuthInstance","isSignedIn","get","profile","currentUser","getBasicProfile","id","getId","fullName","getName","givenName","getGivenName","familyName","getFamilyName","imageUrl","getImageUrl","email","getEmail","signOut","NavBar","props","user","Toggle","Collapse","Nav","className","Link","NavDropdown","title","src","alt","style","width","height","Item","onClick","Layout","children","HomeSection","controls","autostart","autoPlay","Video","type","Home","Card","CardContent","Typography","sx","mb","variant","color","to","Doggo","img","Profile","JSON","stringify","DoggoImg","Login","React","Component","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CodeList","classes","useState","product","setProduct","search","setSearch","getProductData","a","axios","data","console","log","useEffect","placeholder","onChange","e","target","value","TableContainer","component","Paper","Table","TableHead","align","TableBody","filter","item","name","toLowerCase","includes","map","index","_id","scope","difficulty","TypingComponent","state","text","inputValue","lastLetter","words","completedWords","completed","startTime","timeElapsed","wpm","started","progress","setText","split","x","setState","startGame","Date","now","handleChange","length","currentWord","trim","newWords","slice","newCompletedWords","calculateWPM","_handleKeyPress","key","diff","wordsTyped","Math","ceil","reduce","acc","word","this","floor","max","line","li_idx","w_idx","highlight","letter","l_idx","isCurrentWord","isWronglyTyped","shouldBeHighlighted","onKeyPress","autoFocus","Practice","ID","PageNotFound","langList","version","lang","gutterBottom","OutlinedCard","Box","m","px","Language","Java","CodePractice","match","fetchItem","params","setItem","code","setCode","setID","fetch","json","i","obj","App","setIsSignedIn","script","document","createElement","PrivateRoute","rest","Private","onload","load","init","client_id","process","then","listen","signin2","render","appendChild","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0f5f91a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst CheckingSignedInWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport default function CheckingSignedIn() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">ReactGoogleAuthStarter</Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n      <CheckingSignedInWrapper>\r\n        <Spinner animation=\"border\" role=\"status\" />\r\n      </CheckingSignedInWrapper>\r\n    </>\r\n  );\r\n}\r\n","export default function getUser() {\r\n  if (window.gapi === undefined || window.gapi.auth2 === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const authInstance = window.gapi.auth2.getAuthInstance();\r\n  const isSignedIn = authInstance.isSignedIn.get();\r\n\r\n  if (isSignedIn === false) {\r\n    return null;\r\n  }\r\n\r\n  const profile = authInstance.currentUser.get().getBasicProfile();\r\n  const user = {\r\n    id: profile.getId(),\r\n    fullName: profile.getName(),\r\n    givenName: profile.getGivenName(),\r\n    familyName: profile.getFamilyName(),\r\n    imageUrl: profile.getImageUrl(),\r\n    email: profile.getEmail(),\r\n    signOut: authInstance.signOut,\r\n  };\r\n\r\n  return user;\r\n}\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nexport default function NavBar(props) {\r\n  const user = props.user;\r\n\r\n  return (\r\n    <Navbar data-testid=\"NavBar\" bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">TypingTest</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/language\">Language</Nav.Link>\r\n            <Nav.Link href=\"/practice\">Practice</Nav.Link>\r\n            {user && <Nav.Link href=\"/profile\">Profile</Nav.Link>}\r\n          </Nav>\r\n          <Nav>\r\n            {!user ? (\r\n              <div id=\"login-button\" />\r\n            ) : (\r\n              <NavDropdown\r\n                title={\r\n                  <span>\r\n                    Hello, {user.fullName}{\" \"}\r\n                    <img\r\n                      src={user.imageUrl}\r\n                      alt=\"profile\"\r\n                      style={{ width: \"24px\", height: \"24px\" }}\r\n                    />{\" \"}\r\n                  </span>\r\n                }\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item onClick={user.signOut}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}","import NavBar from \"./NavBar\";\r\n\r\nexport default function Layout(props) {\r\n  const user = props.user;\r\n\r\n  return (\r\n    <div>\r\n      <NavBar user={user} />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/video.17cf6613.mp4\";","import React from \"react\";\r\nimport './HomeSection.css'\r\nimport Video from \"../images/video.mp4\"; \r\n\r\nfunction HomeSection() {\r\n    return (\r\n        <div className='home-container'>\r\n            <video controls autostart autoPlay src={Video} type=\"video/mp4\" autoPlay loop muted />\r\n            <h1>TYPING TEST FOR PROGRAMMERS</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeSection","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport getUser from \"../utils/get-user\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CardContent from '@mui/material/CardContent';\r\nimport HomeSection from \"../components/HomeSection\";\r\nimport { Typography } from \"@mui/material\";\r\nimport \"./Home.css\"\r\nconst TextWrapper = styled.div`\r\n  width: 700px;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport default function Home() {\r\n  const user = getUser();\r\n\r\n  return (\r\n    <Layout user={user}>\r\n      <HomeSection/>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography sx={{mb:1.5}} variant=\"h5\" color= \"#3699cf\">\r\n            What is TypingTest?\r\n          </Typography>\r\n          <Typography variant='p'>\r\n          It's a webapp that helps improve coding speed and gauge coding level. We will include a clock and accuracy in our API. The user can choose the language and difficulty of the coding problems and we want to expand it into a more code learning web by adding some questions so users can think about while they are coding to improve the coding skills.\r\n          </Typography>\r\n        </CardContent> \r\n      </Card>\r\n      <Link to=\"/Language\">\r\n        <button type=\"button\" className = \"Navlink\">\r\n            Start Typing\r\n        </button>\r\n      </Link>\r\n    </Layout>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/doggo.60600ade.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport getUser from \"../utils/get-user\";\r\nimport DoggoImg from \"../images/doggo.jpg\";\r\n\r\nconst Doggo = styled.img`\r\n  width: 500px;\r\n  max-width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nexport default function Profile() {\r\n  const user = getUser();\r\n\r\n  return (\r\n    <Layout user={user}>\r\n      <Container>\r\n        <h1>This is your Profile page!</h1>\r\n        <div>\r\n          Here's what this app knows about you based on your Google login:\r\n        </div>\r\n        <pre>{JSON.stringify(user, null, \"\\t\")}</pre>\r\n        <div>\r\n          Your name is \"{user.fullName}\" and your email is \"{user.email}.\"\r\n        </div>\r\n        <div>Google also thinks you'll like this picture :)</div>\r\n        <br />\r\n        <Doggo src={DoggoImg} />\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\n\r\nexport default function Login() {\r\n  const user = getUser();\r\n\r\n  return (\r\n    <Layout user={user}>\r\n      <Container>\r\n        <h1>This page is private!</h1>\r\n        <div>(meaning you have to login to view the page)</div>\r\n        <br />\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TextField } from \"@mui/material\";\r\n\r\nexport default class  WordCount extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      firstValue: '',\r\n      secondValue: '',\r\n      needWords: '',\r\n      wordCount: '',\r\n      limWords: null,\r\n    }\r\n    this.firstHandle = this.firstHandle.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.secondHandle = this.secondHandle.bind(this)    \r\n  }\r\n  firstHandle(e){\r\n    this.setState({\r\n      firstValue: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault()\r\n    this.setState({\r\n      needWords: this.state.firstValue\r\n    })\r\n  }\r\n\r\n  secondHandle(event){\r\n    this.setState({\r\n      secondValue: event.target.value,\r\n      wordCount: event.target.value === '' ? 0 : this.state.secondValue.split(' ').length,\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    var result = this.state.wordCount;\r\n    return(\r\n     <div>\r\n        <TextField \r\n          data = {this.state.wordCount}\r\n          type=\"text\"\r\n          value={this.state.value}\r\n          onChange={this.secondHandle}\r\n          variant = \"outlined\"\r\n          color = \"primary\"\r\n          multiline\r\n          minRows = \"10\"\r\n          placeholder = \"Start typing\"\r\n          fullWidth>\r\n        </TextField>\r\n        <p>You have written {result} words</p>\r\n      </div>\r\n    );\r\n  }\r\n}","/*import React from 'react';\r\nimport axios from 'axios';\r\nimport { render } from '@testing-library/react';\r\n\r\nexport default class CodeList extends React.Component {\r\n    state = {\r\n        persons : [],\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('http://127.0.0.1:5000/codesnippet/Java').then(res=> {\r\n            console.log(res);\r\n            this.setState({persons: res.data});\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return this.state.persons.map(person => <li>{person.index}</li>);\r\n    }\r\n}*/\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst CodeList = () => {\r\n  const classes = useStyles();\r\n  const [product, setProduct] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const getProductData = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        \"http://127.0.0.1:5000/codesnippet/Java\"\r\n      );\r\n      console.log(data.data);\r\n      setProduct(data.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductData();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Code</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search here\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {/* {product\r\n        .filter((item) => {\r\n          if (search == \"\") {\r\n            return item;\r\n          } else if (item.name.toLowerCase().includes(search.toLowerCase())) {\r\n            return item;\r\n          }\r\n        })\r\n        .map((item) => {\r\n          return (\r\n            <p>\r\n              {item.name} - {item.price}\r\n            </p>\r\n          );\r\n        })} */}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Problem Name</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Problem Index</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {product\r\n              .filter((item) => {\r\n                if (search == \"\") {\r\n                  return item;\r\n                } else if (\r\n                  item.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return item;\r\n                }\r\n              })\r\n              .map((item, index) => {\r\n                return (\r\n                  <StyledTableRow key={item.name}>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Link to={`/Java/${item._id}`}>{item.name}</Link>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.difficulty}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeList;","import React, { Component, useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass TypingComponent extends Component {\r\n  state = {\r\n    text: this.props.text,\r\n    inputValue: \"\",\r\n    lastLetter: \"\",\r\n    words: [],\r\n    completedWords: [],\r\n    completed: false,\r\n    startTime: undefined,\r\n    timeElapsed: 0,\r\n    wpm: 0,\r\n    started: false,\r\n    progress: 0\r\n  };\r\n  componentDidMount(){\r\n    console.log(this.state.text)\r\n  }\r\n  setText = () => {\r\n    const wordsE = this.state.text.split(\" \");\r\n    const words = wordsE.filter(x => x != \"\");\r\n    console.log(words);\r\n    this.setState({\r\n      words: words,\r\n      completedWords: []\r\n    });\r\n  };\r\n\r\n  startGame = () => {\r\n    this.setText();\r\n\r\n    this.setState({\r\n      started: true,\r\n      startTime: Date.now(),\r\n      completed: false,\r\n      progress: 0\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { words, completedWords } = this.state;\r\n    const inputValue = e.target.value;\r\n    const lastLetter = inputValue[inputValue.length - 1];\r\n\r\n    const currentWord = words[0];\r\n    console.log(currentWord, \"currentWord\");\r\n\r\n    // if space or '.', check the word\r\n    if (lastLetter === \" \") {\r\n      // check to see if it matches to the currentWord\r\n      // trim because it has the space\r\n      if (inputValue.trim() === currentWord) {\r\n        // remove the word from the wordsArray\r\n        // cleanUp the input\r\n        const newWords = [...words.slice(1)];\r\n        console.log(newWords, \"newWords\");\r\n        console.log(newWords.length, \"newWords.length\");\r\n        const newCompletedWords = [...completedWords, currentWord];\r\n        console.log(newCompletedWords, \"newCompletedWords\");\r\n        console.log(\"----------------\");\r\n\r\n        // Get the total progress by checking how much words are left\r\n        const progress =\r\n          (newCompletedWords.length /\r\n            (newWords.length + newCompletedWords.length)) *\r\n          100;\r\n        this.setState({\r\n          words: newWords,\r\n          completedWords: newCompletedWords,\r\n          inputValue: \"\",\r\n          completed: newWords.length === 0,\r\n          progress: progress\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        inputValue: inputValue,\r\n        lastLetter: lastLetter\r\n      });\r\n      console.log(this.state.inputValue, \"this.state.inputValue\");\r\n      console.log(this.state.lastLetter, \"this.state.lastLetter\");\r\n      console.log(\"================================\");\r\n    }\r\n\r\n    this.calculateWPM();\r\n  };\r\n\r\n  _handleKeyPress = (e) => {\r\n    const inputValue = e.target.value;\r\n    if (e.key === 'Enter'){\r\n      const { words, completedWords } = this.state;\r\n\r\n      const currentWord = words[0];\r\n      console.log(currentWord, \"currentWord\");\r\n      \r\n      if (currentWord == inputValue + \"\\n\"){\r\n        const newWords = [...words.slice(1)];\r\n        console.log(newWords, \"newWords\");\r\n        console.log(newWords.length, \"newWords.length\");\r\n        const newCompletedWords = [...completedWords, currentWord];\r\n        console.log(newCompletedWords, \"newCompletedWords\");\r\n        console.log(\"----------------\");\r\n\r\n        // Get the total progress by checking how much words are left\r\n        const progress =\r\n          (newCompletedWords.length /\r\n            (newWords.length + newCompletedWords.length)) *\r\n          100;\r\n        this.setState({\r\n          words: newWords,\r\n          completedWords: newCompletedWords,\r\n          inputValue: \"\",\r\n          completed: newWords.length === 0,\r\n          progress: progress\r\n        });\r\n      }\r\n    }\r\n    this.calculateWPM();\r\n  } \r\n\r\n  calculateWPM = () => {\r\n    const { startTime, completedWords } = this.state;\r\n    const now = Date.now();\r\n    const diff = (now - startTime) / 1000 / 60; // 1000 ms / 60 s\r\n    console.log(now, \"now\");\r\n    console.log(startTime, \"startTime\");\r\n    console.log(diff, \"diff\");\r\n    console.log(\"**************\");\r\n\r\n    // every word is considered to have 5 letters\r\n    // so here we are getting all the letters in the words and divide them by 5\r\n    // \"my\" shouldn't be counted as same as \"deinstitutionalization\"\r\n    const wordsTyped = Math.ceil(\r\n      completedWords.reduce((acc, word) => (acc += word.length), 0) / 5\r\n    );\r\n    console.log(completedWords, \"completedWords\");\r\n    console.log(wordsTyped, \"wordsTyped\");\r\n    console.log(\"+=+=+=+=+=+=\");\r\n\r\n    // calculating the wpm\r\n    const wpm = Math.ceil(wordsTyped / diff);\r\n\r\n    this.setState({\r\n      wpm: wpm,\r\n      timeElapsed: diff\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      text,\r\n      inputValue,\r\n      completedWords,\r\n      wpm,\r\n      timeElapsed,\r\n      started,\r\n      completed,\r\n      progress\r\n    } = this.state;\r\n\r\n    if (!started)\r\n      return (\r\n        <div className=\"container\">\r\n          <h2>Welcome to the Typing game</h2>\r\n          <p>\r\n            <strong>Rules:</strong> <br />\r\n            Type in the input field the highlighted word. <br />\r\n            The correct words will turn <span className=\"green\">green</span>.\r\n            <br />\r\n            Incorrect letters will turn <span className=\"red\">red</span>.\r\n            <br />\r\n            <br />\r\n            Have fun!\r\n          </p>\r\n          <button className=\"start-btn\" onClick={this.startGame}>\r\n            Start game\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n    if (!text) return <p>Loading...</p>;\r\n\r\n    if (completed) {\r\n      return (\r\n        <div className=\"container\">\r\n          <h2>\r\n            Your WPM is <strong>{wpm}</strong>\r\n          </h2>\r\n          <button className=\"start-btn\" onClick={this.startGame}>\r\n            Play again\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"wpm\">\r\n          <strong>WPM: </strong>\r\n          {wpm}\r\n          <br />\r\n          <strong>Time: </strong>\r\n          {Math.floor(timeElapsed * 60)}s\r\n        </div>\r\n        <div className=\"container\">\r\n          <h4>Type the text below</h4>\r\n          <progress value={progress} max=\"100\" />\r\n          <p className=\"text\">\r\n            {text.split(\"\\n\").map((line, li_idx) => {\r\n              return(\r\n              <div key = {li_idx}>\r\n              {line.split(\" \").map((word, w_idx) => {\r\n                let highlight = false;\r\n                let currentWord = false;\r\n\r\n                // this means that the word is completed, so turn it green\r\n                if (completedWords.length > w_idx) {\r\n                  highlight = true;\r\n                }\r\n\r\n                if (completedWords.length === w_idx) {\r\n                  currentWord = true;\r\n                }\r\n\r\n                return (\r\n                  <span\r\n                    className={`word \r\n                                  ${highlight && \"green\"} \r\n                                  ${currentWord && \"underline\"}`}\r\n                    key={w_idx}\r\n                  >\r\n                    {word.split(\"\").map((letter, l_idx) => {\r\n                      const isCurrentWord = w_idx === completedWords.length;\r\n                      const isWronglyTyped = letter !== inputValue[l_idx];\r\n                      const shouldBeHighlighted = l_idx < inputValue.length;\r\n\r\n                      return (\r\n                        <span\r\n                          className={`letter ${\r\n                            isCurrentWord && shouldBeHighlighted\r\n                              ? isWronglyTyped\r\n                                ? \"red\"\r\n                                : \"green\"\r\n                              : \"\"\r\n                          }`}\r\n                          key={l_idx}\r\n                        >\r\n                          {letter}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  </span>\r\n                );\r\n              })}\r\n              </div>\r\n              );\r\n            })}\r\n            </p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            onKeyPress={this._handleKeyPress}\r\n            value={inputValue}\r\n            // autoFocus={started ? 'true' : 'false'}\r\n            autoFocus={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypingComponent;","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\nimport  Timer from \"../utils/Timer\";\r\nimport CodeCard from \"../utils/CodeCard\";\r\nimport WordCount from '../utils/WordCount'\r\nimport CodeList from \"../components/CodeList\";\r\nimport TypingComponent from \"../components/TypingComponent\";\r\n\r\n\r\nexport default function Practice() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user = {user}>\r\n            <Container>\r\n                <div>\r\n                    <TypingComponent ID='3687284161695356416'/>\r\n                </div>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}","import Container from \"react-bootstrap/Container\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <h1>This page was not found :(</h1>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./LangButton.css\";\r\n\r\nconst langs = [\r\n  {\r\n    id: 1,\r\n    name: 'C++',\r\n    version: 11\r\n   },\r\n  {\r\n    id: 2,\r\n    name: 'Python',\r\n    version: 3\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Java',\r\n    version: 17\r\n   }\r\n]\r\n  \r\nconst langList = langs.map(lang => (\r\n  <Link to=\"/Java\">\r\n    <button type=\"button\" className=\"LangButton\">\r\n      <Typography sx={{ fontSize: 20 }} color='#3699cf' gutterBottom>\r\n        {lang.name}\r\n      </Typography>\r\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n        version.{lang.version}\r\n      </Typography>\r\n    </button>\r\n  </Link>\r\n))\r\n\r\nexport default function OutlinedCard() {\r\n  return (\r\n    <Box sx={{ width: 300, m: 10, px: 70}}>\r\n      {langList}\r\n    </Box>\r\n  );\r\n}","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport getUser from \"../utils/get-user\";\r\nimport LangCard from \"../utils/LangCard\";\r\n\r\nexport default function Language() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user={user}>\r\n        <LangCard/>\r\n        </Layout>\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\nimport CodeList from \"../components/CodeList\";\r\n\r\nexport default function Java() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user = {user}>\r\n            <Container>\r\n                <div>\r\n                    <CodeList/>\r\n                </div>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport TypingComponent from '../components/TypingComponent';\r\n\r\nexport default function CodePractice(match) {\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchItem();\r\n        console.log(match.match.params._id);\r\n\t}, []);\r\n\r\n\tconst [item, setItem] = useState([]); \r\n\tconst [code, setCode] = useState(\"\"); \r\n\tconst [_id, setID] = useState();\r\n    \r\n\tconst fetchItem = async () => {\r\n\t\tconst fetchItem = await fetch(`http://127.0.0.1:5000/codesnippet/Java`\r\n        );\r\n        const item = await fetchItem.json();\r\n        setItem(item);\r\n        console.log(item);\r\n\t\tconsole.log(item[0]);\r\n\t\tconsole.log(item[0].code);\r\n\t\t//console.log(item[match.match.params._id].code);\r\n\t\t//console.log(typeof item[0].code)\r\n\t\t//const code = item[match.match.params._id].code;\r\n\t\t//setCode(code)\r\n\t\tconsole.log(code);\r\n\t\tconsole.log(typeof code)\r\n\r\n\t\tfor(var i = 0; i < item.length; i++) {\r\n\t\t\tvar obj = item[i];\r\n\t\t\tif (obj._id  == match.match.params._id)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(obj);\r\n\t\t\t\tsetCode(obj.code)\r\n\t\t\t\tsetID(obj._id)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(_id)\r\n\t}\r\n\tif(code != \"\"){\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TypingComponent text={code}/>\r\n\t\t</div>\r\n\t);\r\n}\r\nreturn (\r\n\t<div></div>\r\n)\r\n}","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport CheckingSignedIn from \"./pages/CheckingSignedIn\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Private from \"./pages/Private\";\r\nimport Practice from \"./pages/Practice\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport Language from \"./pages/ Language\";\r\nimport Java from \"./pages/Java\";\r\nimport CodePractice from \"./utils/CodePractice\";\r\n\r\nexport default function App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(null);\r\n  const script = document.createElement(\"script\");\r\n  script.src = \"https://apis.google.com/js/platform.js\";\r\n  script.onload = () => initGoogleSignIn();\r\n  document.body.appendChild(script);\r\n\r\n  function initGoogleSignIn() {\r\n    window.gapi.load(\"auth2\", () => {\r\n      window.gapi.auth2\r\n        .init({\r\n          client_id: process.env.REACT_APP_AUTH_CLIENT_ID,\r\n        })\r\n        .then(() => {\r\n          const authInstance = window.gapi.auth2.getAuthInstance();\r\n          const isSignedIn = authInstance.isSignedIn.get();\r\n          setIsSignedIn(isSignedIn);\r\n\r\n          authInstance.isSignedIn.listen((isSignedIn) => {\r\n            setIsSignedIn(isSignedIn);\r\n          });\r\n        });\r\n    });\r\n    window.gapi.load(\"signin2\", () => {\r\n      window.gapi.signin2.render(\"login-button\", {\r\n        theme: \"dark\",\r\n      });\r\n    });\r\n  }\r\n\r\n  function PrivateRoute(props) {\r\n    const { component, ...rest } = props;\r\n    return <Route {...rest} component={isSignedIn ? component : Private} />;\r\n  }\r\n\r\n  if (isSignedIn !== null) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/practice\" component={Practice} />\r\n          <Route exact path=\"/language\" component={Language} />\r\n          <Route path=\"/java\" exact component={Java} />\r\n          <Route path=\"/java/:_id\" component={CodePractice}/>\r\n          <Route path=\"/\" component={PageNotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  return <CheckingSignedIn />;\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}