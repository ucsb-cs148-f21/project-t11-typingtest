{"version":3,"sources":["pages/CheckingSignedIn.js","utils/get-user.js","components/NavBar.js","components/Layout.js","images/video.mp4","components/HomeSection.js","pages/Home.js","components/Circle.js","components/UserData.js","pages/Profile.js","pages/Private.js","pages/PageNotFound.js","utils/LangCard.js","images/bg.jpg","pages/ Language.js","components/CodeListJava.js","pages/Java.js","components/CodeListCpp.js","pages/Cpp.js","components/CodeListPython.js","pages/Python.js","components/TypingComponent.js","utils/CodePracticeJava.js","utils/CodePracticeCpp.js","utils/CodePracticePython.js","App.js","index.js"],"names":["CheckingSignedInWrapper","styled","div","CheckingSignedIn","Navbar","bg","expand","Container","Brand","href","Spinner","animation","role","getUser","undefined","window","gapi","auth2","authInstance","getAuthInstance","isSignedIn","get","profile","currentUser","getBasicProfile","id","getId","fullName","getName","givenName","getGivenName","familyName","getFamilyName","imageUrl","getImageUrl","email","getEmail","signOut","NavBar","props","user","sticky","Toggle","Collapse","Nav","className","Link","NavDropdown","title","Item","src","alt","style","width","height","onClick","Layout","children","HomeSection","controls","autostart","autoPlay","Video","type","to","Home","Card","CardContent","Typography","sx","mb","variant","color","CircleContainer","PercentageContainer","StyledCircle","circle","Circle","percentage","text","strokeWidth","fontSize","fontColor","fontFamily","primaryColor","secondaryColor","fill","hidePercentageText","strokeLinecap","R","circumference","offset","gradientId","replace","version","xmlns","x1","y1","x2","y2","stopColor","r","cx","cy","stroke","strokeDasharray","strokeDashoffset","defaultProps","UserData","state","easyProblems","mediumProblems","hardProblems","listOfProblems","fetchURL","location","this","toString","substr","console","log","fetch","then","response","json","data","setState","JSON","stringify","Easy","Medium","Hard","problemsSolved","easy","medium","hard","toFixed","Component","Profile","Login","PageNotFound","langList","name","link","dis","map","lang","gutterBottom","OutlinedCard","Grid","container","spacing","direction","alignItems","justifyContent","minHeight","item","xs","Language","backgroundImage","background","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","white","body","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CodeListJava","classes","useState","product","setProduct","search","setSearch","getProductData","a","axios","useEffect","placeholder","onChange","e","target","value","TableContainer","component","Paper","Table","TableHead","align","TableBody","filter","toLowerCase","includes","index","_id","scope","difficulty","skillcategory","Java","CodeListCpp","Cpp","CodeListPython","Python","TypingComponent","textID","userID","inputValue","lastLetter","words","completedWords","completed","startTime","timeElapsed","wpm","started","progress","lineCount","lineWCompleted","setText","split","x","startGame","Date","now","handleChange","length","currentWord","trim","newWords","slice","newCompletedWords","newLineWCompleted","calculateWPM","_handleKeyPress","key","newLineCount","diff","wordsTyped","Math","ceil","reduce","acc","word","requestOptions","method","headers","problemID","catch","err","error","floor","max","line","li_idx","indent","i","w_idx","highlight","letter","l_idx","isCurrentWord","isWronglyTyped","shouldBeHighlighted","onKeyPress","autoFocus","CodePracticeJava","match","fetchItem","params","setItem","code","setCode","setID","obj","CodePracticeCpp","CodePracticePython","App","setIsSignedIn","script","document","createElement","PrivateRoute","rest","Private","onload","load","init","client_id","process","listen","signin2","render","appendChild","exact","path","ReactDOM","getElementById"],"mappings":"kVAOMA,EAA0BC,IAAOC,IAAV,4JAQd,SAASC,IACtB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,cAACC,EAAA,EAAD,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,iCAGJ,cAACT,EAAD,UACE,cAACU,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,gBCxB1B,SAASC,IACtB,QAAoBC,IAAhBC,OAAOC,WAA4CF,IAAtBC,OAAOC,KAAKC,MAC3C,OAAO,KAGT,IAAMC,EAAeH,OAAOC,KAAKC,MAAME,kBAGvC,IAAmB,IAFAD,EAAaE,WAAWC,MAGzC,OAAO,KAGT,IAAMC,EAAUJ,EAAaK,YAAYF,MAAMG,kBAW/C,MAVa,CACXC,GAAIH,EAAQI,QACZC,SAAUL,EAAQM,UAClBC,UAAWP,EAAQQ,eACnBC,WAAYT,EAAQU,gBACpBC,SAAUX,EAAQY,cAClBC,MAAOb,EAAQc,WACfC,QAASnB,EAAamB,S,oBCdX,SAASC,EAAOC,GAC7B,IAAMC,EAAOD,EAAMC,KAEnB,OACE,cAACpC,EAAA,EAAD,CAAQ,cAAY,SAASC,GAAG,QAAQC,OAAO,KAAKmC,OAAO,MAA3D,SACE,eAAClC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,2BACA,cAACL,EAAA,EAAOsC,OAAR,CAAe,gBAAc,qBAC7B,eAACtC,EAAA,EAAOuC,SAAR,CAAiBlB,GAAG,mBAApB,UACE,eAACmB,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUrC,KAAK,IAAf,kBACA,eAACsC,EAAA,EAAD,CAAaC,MAAM,WAAnB,UACE,cAACD,EAAA,EAAYE,KAAb,CAAkBxC,KAAK,OAAvB,iBACA,cAACsC,EAAA,EAAYE,KAAb,CAAkBxC,KAAK,QAAvB,kBACA,cAACsC,EAAA,EAAYE,KAAb,CAAkBxC,KAAK,UAAvB,uBAED+B,GAAQ,cAACI,EAAA,EAAIE,KAAL,CAAUrC,KAAK,WAAf,wBAEX,cAACmC,EAAA,EAAD,UACIJ,EAGA,cAACO,EAAA,EAAD,CACEC,MACE,2CACUR,EAAKb,SAAU,IACvB,qBACEuB,IAAKV,EAAKP,SACVkB,IAAI,UACJC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UAC/B,OAGP7B,GAAG,qBAXL,SAaE,cAACsB,EAAA,EAAYE,KAAb,CAAkBM,QAASf,EAAKH,QAAhC,sBAfF,qBAAKZ,GAAG,2BCxBP,SAAS+B,EAAOjB,GAC7B,IAAMC,EAAOD,EAAMC,KAEnB,OACE,gCACE,cAACF,EAAD,CAAQE,KAAMA,IACbD,EAAMkB,Y,8BCRE,G,OAAA,IAA0B,mCCoB1BC,MAff,WAAwB,IAAD,EACnB,OACI,sBAAKb,UAAU,iBAAf,UACI,0BAAOc,UAAQ,EAACC,WAAS,EAACC,UAAQ,EAACX,IAAKY,EAAOC,KAAK,aAApD,oFACA,6DACA,6EACA,cAAC,IAAD,CAAMC,GAAG,YAAT,SACI,yD,SCFD,SAASC,IACtB,IAAMzB,EAAO3B,IAEb,OACE,eAAC2C,EAAD,CAAQhB,KAAMA,EAAd,UACE,cAAC,EAAD,IACA,cAAC0B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,GAAI,CAACC,GAAG,KAAMC,QAAQ,KAAKC,MAAO,UAA9C,iCAGA,cAACJ,EAAA,EAAD,CAAYG,QAAQ,IAApB,gX,2DCjBJE,EAAkBxE,IAAOC,IAAV,mGAKfwE,EAAsBzE,IAAOC,IAAV,iOAYnByE,EAAe1E,IAAO2E,OAAV,sFAOZC,EAAS,SAAC,GAaT,IAZLC,EAYI,EAZJA,WACAC,EAWI,EAXJA,KACA1B,EAUI,EAVJA,MACA2B,EASI,EATJA,YACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,WACAC,EAKI,EALJA,aACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,cAGMC,EAAKpC,EAAQ,EAAoB,EAAd2B,EAErBU,EAAgB,KAASD,EACzBE,EAASD,EAAgBZ,EAAa,IAAMY,EAC5CE,EAAa,UAAGR,EAAa,IAAhB,OAAqBA,EAAa,IAAKS,QAAQ,KAAM,IAEtE,OACE,eAACpB,EAAD,CACE5B,UAAU,gCACVO,MAAO,CACLE,OAAO,GAAD,OAAKD,EAAL,MACNA,MAAM,GAAD,OAAKA,EAAL,OAJT,UAOIkC,EAeE,KAdF,cAACb,EAAD,CAAqB7B,UAAU,gDAA/B,SACE,uBACEA,UAAU,uCACVO,MAAO,CACL6B,WACAE,aACAX,MAAOU,GALX,UAQGJ,EARH,IASE,uBACCC,OAMP,sBACE1B,MAAM,OACNC,OAAO,OACPwC,QAAQ,MACRC,MAAM,6BAJR,UAME,iCACEtE,GAAImE,EACJI,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,OALL,UAOE,sBAAMR,OAAO,KAAKS,UAAWhB,EAAa,KAC1C,sBAAMO,OAAO,OAAOS,UAAWhB,EAAa,QAE9C,wBACEJ,YAAaA,EACbM,KAAK,cACLe,EAAGZ,EACHa,GAAIjD,EAAQ,EACZkD,GAAIlD,EAAQ,EACZmD,OAAQnB,EACRoB,gBAAe,UAAKf,EAAL,YAAsBA,KAEvC,cAACf,EAAD,CACEK,YAAaA,EACbM,KAAMA,EACNe,EAAGZ,EACHa,GAAIjD,EAAQ,EACZkD,GAAIlD,EAAQ,EACZmD,OAAM,eAAUZ,EAAV,KACNJ,cAAeA,EACfiB,gBAAe,UAAKf,EAAL,YAAsBA,GACrCgB,iBAAkBf,WAsB5Bd,EAAO8B,aAAe,CACpBtD,MAAO,IACP2B,YAAa,EACbQ,cAAe,QACfP,SAAU,UACVC,UAAW,UACXC,WAAY,UACZC,aAAc,CAAC,UAAW,WAC1BC,eAAgB,cAChBC,KAAM,eAGOT,QC5IT+B,E,4MACJC,MAAQ,CACNrE,KAAM,EAAKD,MAAMC,KACjBsE,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,eAAgB,I,uDAElB,WAAoB,IAAD,OACbC,EAAWnG,OAAOoG,SAAS1G,KAC/ByG,GAAY,IACZA,GAAYE,KAAKP,MAAMrE,KAAKf,GAAG4F,WAAWC,OAAO,EAAG,IACpDC,QAAQC,IAAIN,GACZO,MAAMP,GACHQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJN,QAAQC,IAAIK,GACZ,EAAKC,SAAS,CAAChB,aAAciB,KAAKC,UAAUH,EAAK,GAAGI,MAAOlB,eAAgBgB,KAAKC,UAAUH,EAAK,GAAGK,QAASlB,aAAce,KAAKC,UAAUH,EAAK,GAAGM,MAAOlB,eAAgBc,KAAKC,UAAUH,EAAK,GAAGO,uB,oBAGlM,WACE,IAAMC,EAAOjB,KAAKP,MAAMC,aAClBwB,EAASlB,KAAKP,MAAME,eACpBwB,EAAOnB,KAAKP,MAAMG,aAetB,OACI,qCACI,+CAAkBI,KAAKP,MAAMrE,KAAKb,SAAlC,OACA,gCACE,cAAC,EAAD,CAAQmD,YAAa,IAAMuD,EAAK,IAAIG,QAAQ,GAAIxD,YAAa,EAAGD,KAAK,OAAOK,aAAc,CAAC,UAAW,WAAYC,eAAe,YACjI,cAAC,EAAD,CAAQP,YAAa,IAAMwD,EAAO,GAAGE,QAAQ,GAAIzD,KAAK,SAASC,YAAa,EAAGK,eAAe,YAC9F,cAAC,EAAD,CAAQP,YAAa,IAAMyD,EAAK,GAAGC,QAAQ,GAAIzD,KAAK,OAAOC,YAAa,EAAGI,aAAc,CAAC,UAAW,WAAYC,eAAe,eAElI,8B,GA9COoD,aAmDR7B,IC/CA,SAAS8B,IACtB,IAAMlG,EAAO3B,IAEb,OACE,cAAC2C,EAAD,CAAQhB,KAAMA,EAAd,SACE,cAACjC,EAAA,EAAD,UACE,cAAC,EAAD,CAAUiC,KAAQA,QCRX,SAASmG,IACtB,IAAMnG,EAAO3B,IAEb,OACE,cAAC2C,EAAD,CAAQhB,KAAMA,EAAd,SACE,eAACjC,EAAA,EAAD,WACE,uDACA,+EACA,4BCVO,SAASqI,IACtB,OACE,cAACpF,EAAD,UACE,cAACjD,EAAA,EAAD,UACE,gE,sBCwBFsI,G,OAxBQ,CACZ,CACEpH,GAAI,EACJqH,KAAM,MACNhD,QAAS,GACTiD,KAAM,OACNC,IAAI,6HAEN,CACEvH,GAAI,EACJqH,KAAM,SACNhD,QAAS,EACTiD,KAAM,UACNC,IAAI,6EAEN,CACEvH,GAAI,EACJqH,KAAM,OACNhD,QAAS,GACTiD,KAAM,QACNC,IAAI,qJAIeC,KAAI,SAAAC,GAAI,OAC7B,cAAC,IAAD,CAAMlF,GAAIkF,EAAKH,KAAf,SACE,eAAC,IAAD,CAAMlG,UAAU,aAAhB,UACE,cAACuB,EAAA,EAAD,CAAYC,GAAI,CAAEY,SAAU,IAAMT,MAAM,UAAU2E,cAAY,EAA9D,SACGD,EAAKJ,OAER,eAAC1E,EAAA,EAAD,CAAYC,GAAI,CAAEC,GAAI,KAAOE,MAAM,iBAAnC,qBACW0E,EAAKpD,WAEhB,cAAC1B,EAAA,EAAD,CAAYC,GAAI,CAAEC,GAAI,KAAOE,MAAM,iBAAnC,SACG0E,EAAKF,eAMC,SAASI,IACtB,OACF,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACftG,MAAO,CAAEuG,UAAW,SANtB,SASE,cAACN,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAf,SACEhB,MC3DW,WAA0B,+BCM1B,SAASiB,KACpB,IAAMtH,EAAO3B,IACb,OACI,cAAC2C,EAAD,CAAQhB,KAAMA,EAAd,SACI,qBAAKY,MAAO,CAAE2G,gBAAgB,OAAD,OAASC,GAAT,MAA7B,SACA,cAAC,EAAD,Q,8ICuBNC,GAAkBC,cAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiB,UACjB7F,MAAO2F,EAAMG,QAAQC,OAAOC,OAE9BC,KAAM,CACJxF,SAAU,OANUiF,CAQpBQ,MAEEC,GAAiBT,cAAW,SAACC,GAAD,MAAY,CAC5CS,KAAM,CACJ,qBAAsB,CACpBP,gBAAiBF,EAAMG,QAAQO,OAAOC,WAHrBZ,CAMnBa,MAEEC,GAAYC,aAAW,CAC3BC,MAAO,CACLC,SAAU,OA6FCC,GAzFM,WACnB,IAAMC,EAAUL,KAChB,EAA8BM,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,yCAAG,6BAAAC,EAAA,+EAEAC,KAAMxK,IACvB,0DAHiB,OAEbwG,EAFa,OAKnBN,QAAQC,IAAIK,EAAKA,MACjB2D,EAAW3D,EAAKA,MANG,gDAQnBN,QAAQC,IAAR,MARmB,yDAAH,qDAepB,OAHAsE,qBAAU,WACRH,MACC,IAED,sBAAK9I,UAAU,MAAf,UACE,sCACA,uBACEkB,KAAK,OACLgI,YAAY,cACZC,SAAU,SAACC,GACTP,EAAUO,EAAEC,OAAOC,UAoBvB,cAACC,GAAA,EAAD,CAAgBC,UAAWC,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO1J,UAAWwI,EAAQH,MAAO,aAAW,mBAA5C,UACE,cAACsB,GAAA,EAAD,UACE,eAACzB,GAAA,EAAD,WACE,cAACd,GAAD,CAAiBwC,MAAM,SAAvB,0BACA,cAACxC,GAAD,CAAiBwC,MAAM,SAAvB,2BACA,cAACxC,GAAD,CAAiBwC,MAAM,SAAvB,wBAGJ,cAACC,GAAA,EAAD,UACGnB,EACEoB,QAAO,SAAC/C,GACP,MAAe,KAAX6B,GAGF7B,EAAKd,KAAK8D,cAAcC,SAASpB,EAAOmB,eAFjChD,OACF,KAMRX,KAAI,SAACW,EAAMkD,GACV,OACE,eAACnC,GAAD,WACE,cAACV,GAAD,CAAiBwC,MAAM,SAAvB,SACE,cAAC,IAAD,CAAMzI,GAAE,gBAAW4F,EAAKmD,KAAxB,SAAgCnD,EAAKd,SAEvC,cAACmB,GAAD,CAAiBwC,MAAM,SAASJ,UAAU,KAAKW,MAAM,MAArD,SACGpD,EAAKqD,aAER,cAAChD,GAAD,CAAiBwC,MAAM,SAASJ,UAAU,KAAKW,MAAM,MAArD,SACGpD,EAAKsD,kBARWtD,EAAKd,oBCzH7B,SAASqE,KACpB,IAAM3K,EAAO3B,IACb,OACI,cAAC2C,EAAD,CAAQhB,KAAQA,EAAhB,SACI,cAACjC,EAAA,EAAD,UACI,8BACI,cAAC,GAAD,UCCpB,IAAM0J,GAAkBC,cAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiB,UACjB7F,MAAO2F,EAAMG,QAAQC,OAAOC,OAE9BC,KAAM,CACJxF,SAAU,OANUiF,CAQpBQ,MAEEC,GAAiBT,cAAW,SAACC,GAAD,MAAY,CAC5CS,KAAM,CACJ,qBAAsB,CACpBP,gBAAiBF,EAAMG,QAAQO,OAAOC,WAHrBZ,CAMnBa,MAEEC,GAAYC,aAAW,CAC3BC,MAAO,CACLC,SAAU,OA6FCiC,GAzFK,WAClB,IAAM/B,EAAUL,KAChB,EAA8BM,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,yCAAG,6BAAAC,EAAA,+EAEAC,KAAMxK,IACvB,yDAHiB,OAEbwG,EAFa,OAKnBN,QAAQC,IAAIK,EAAKA,MACjB2D,EAAW3D,EAAKA,MANG,gDAQnBN,QAAQC,IAAR,MARmB,yDAAH,qDAepB,OAHAsE,qBAAU,WACRH,MACC,IAED,sBAAK9I,UAAU,MAAf,UACE,qCACA,uBACEkB,KAAK,OACLgI,YAAY,cACZC,SAAU,SAACC,GACTP,EAAUO,EAAEC,OAAOC,UAoBvB,cAACC,GAAA,EAAD,CAAgBC,UAAWC,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO1J,UAAWwI,EAAQH,MAAO,aAAW,mBAA5C,UACE,cAACsB,GAAA,EAAD,UACE,eAACzB,GAAA,EAAD,WACE,cAAC,GAAD,CAAiB0B,MAAM,SAAvB,0BACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,gCACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,wBAGJ,cAACC,GAAA,EAAD,UACGnB,EACEoB,QAAO,SAAC/C,GACP,MAAe,KAAX6B,GAGF7B,EAAKd,KAAK8D,cAAcC,SAASpB,EAAOmB,eAFjChD,OACF,KAMRX,KAAI,SAACW,EAAMkD,GACV,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBL,MAAM,SAAvB,SACE,cAAC,IAAD,CAAMzI,GAAE,eAAU4F,EAAKmD,KAAvB,SAA+BnD,EAAKd,SAEtC,cAAC,GAAD,CAAiB2D,MAAM,SAASJ,UAAU,KAAKW,MAAM,MAArD,SACGpD,EAAKqD,aAER,cAAC,GAAD,CAAiBR,MAAM,SAASJ,UAAU,KAAKW,MAAM,MAArD,SACGpD,EAAKsD,kBARWtD,EAAKd,oBCpG7B,SAASuE,KACpB,IAAM7K,EAAO3B,IACb,OACI,cAAC2C,EAAD,CAAQhB,KAAQA,EAAhB,SACI,cAACjC,EAAA,EAAD,UACI,8BACI,cAAC,GAAD,UCCpB,IAAM0J,GAAkBC,cAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiB,UACjB7F,MAAO2F,EAAMG,QAAQC,OAAOC,OAE9BC,KAAM,CACJxF,SAAU,OANUiF,CAQpBQ,MAEEC,GAAiBT,cAAW,SAACC,GAAD,MAAY,CAC5CS,KAAM,CACJ,qBAAsB,CACpBP,gBAAiBF,EAAMG,QAAQO,OAAOC,WAHrBZ,CAMnBa,MAEEC,GAAYC,aAAW,CAC3BC,MAAO,CACLC,SAAU,OA6FCmC,GAzFQ,WACrB,IAAMjC,EAAUL,KAChB,EAA8BM,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,yCAAG,6BAAAC,EAAA,+EAEAC,KAAMxK,IACvB,4DAHiB,OAEbwG,EAFa,OAKnBN,QAAQC,IAAIK,EAAKA,MACjB2D,EAAW3D,EAAKA,MANG,gDAQnBN,QAAQC,IAAR,MARmB,yDAAH,qDAepB,OAHAsE,qBAAU,WACRH,MACC,IAED,sBAAK9I,UAAU,MAAf,UACE,wCACA,uBACEkB,KAAK,OACLgI,YAAY,cACZC,SAAU,SAACC,GACTP,EAAUO,EAAEC,OAAOC,UAoBvB,cAACC,GAAA,EAAD,CAAgBC,UAAWC,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO1J,UAAWwI,EAAQH,MAAO,aAAW,mBAA5C,UACE,cAACsB,GAAA,EAAD,UACE,eAACzB,GAAA,EAAD,WACE,cAAC,GAAD,CAAiB0B,MAAM,SAAvB,0BACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,2BACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,wBAGJ,cAACC,GAAA,EAAD,UACGnB,EACEoB,QAAO,SAAC/C,GACP,MAAe,KAAX6B,GAGF7B,EAAKd,KAAK8D,cAAcC,SAASpB,EAAOmB,eAFjChD,OACF,KAMRX,KAAI,SAACW,EAAMkD,GACV,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBL,MAAM,SAAvB,SACE,cAAC,IAAD,CAAMzI,GAAE,kBAAa4F,EAAKmD,KAA1B,SAAkCnD,EAAKd,SAEzC,cAAC,GAAD,CAAiB2D,MAAM,SAASJ,UAAU,KAAKW,MAAM,MAArD,SACGpD,EAAKqD,aAER,cAAC,GAAD,CAAiBR,MAAM,SAASJ,UAAU,KAAKW,MAAM,MAArD,SACGpD,EAAKsD,kBARWtD,EAAKd,oBCpG7B,SAASyE,KACpB,IAAM/K,EAAO3B,IACb,OACI,cAAC2C,EAAD,CAAQhB,KAAQA,EAAhB,SACI,cAACjC,EAAA,EAAD,UACI,8BACI,cAAC,GAAD,U,aCTdiN,G,4MACJ3G,MAAQ,CACN9B,KAAM,EAAKxC,MAAMwC,KACjB0I,OAAQ,EAAKlL,MAAMkL,OACnBC,OAAQ,EAAKnL,MAAMmL,OACnBC,WAAY,GACZC,WAAY,GACZC,MAAO,GACPC,eAAgB,GAChBC,WAAW,EACXC,eAAWlN,EACXmN,YAAa,EACbC,IAAK,EACLC,SAAS,EACTC,SAAU,EACVC,UAAW,EACXC,eAAgB,G,EAclBC,QAAU,WACR,IAEMV,EAFQ,EAAKhH,MAAM9B,KAAKc,QAAQ,MAAO,OACxB2I,MAAM,KACN7B,QAAO,SAAA8B,GAAC,MAAS,IAALA,KACjClH,QAAQC,IAAIqG,GACZ,EAAK/F,SAAS,CACZ+F,MAAOA,EACPC,eAAgB,M,EAIpBY,UAAY,WACV,EAAKH,UAEL,EAAKzG,SAAS,CACZqG,SAAS,EACTH,UAAWW,KAAKC,MAChBb,WAAW,EACXK,SAAU,EACVC,UAAW,EACXC,eAAgB,K,EAIpBO,aAAe,SAAA5C,GACb,MAAkD,EAAKpF,MAA/CgH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,eAAgBQ,EAA/B,EAA+BA,eACzBX,EAAa1B,EAAEC,OAAOC,MACtByB,EAAaD,EAAWA,EAAWmB,OAAS,GAE5CC,EAAclB,EAAM,GAI1B,GAHAtG,QAAQC,IAAIuH,EAAa,eAGN,MAAfnB,GAGF,GAAID,EAAWqB,SAAWD,EAAa,CAGrC,IAAME,EAAQ,aAAOpB,EAAMqB,MAAM,IACjC3H,QAAQC,IAAIyH,EAAU,YACtB1H,QAAQC,IAAIyH,EAASH,OAAQ,mBAC7B,IAAMK,EAAiB,uBAAOrB,GAAP,CAAuBiB,IAC9CxH,QAAQC,IAAI2H,EAAmB,qBAC/B5H,QAAQC,IAAI,oBACZ,IAAM4H,EAAoBd,EAAe,EAGnCF,EACHe,EAAkBL,QAChBG,EAASH,OAASK,EAAkBL,QACvC,IACF,EAAKhH,SAAS,CACZ+F,MAAOoB,EACPnB,eAAgBqB,EAChBxB,WAAY,GACZI,UAA+B,IAApBkB,EAASH,OACpBV,SAAUA,EACVE,eAAgBc,UAIpB,EAAKtH,SAAS,CACZ6F,WAAYA,EACZC,WAAYA,IAEdrG,QAAQC,IAAI,EAAKX,MAAM8G,WAAY,yBACnCpG,QAAQC,IAAI,EAAKX,MAAM+G,WAAY,yBACnCrG,QAAQC,IAAI,oCAGd,EAAK6H,gB,EAGPC,gBAAkB,SAACrD,GACjB,IAAM0B,EAAa1B,EAAEC,OAAOC,MAC5B,GAAc,UAAVF,EAAEsD,IAAgB,CACpB,MAA6D,EAAK1I,MAA1DgH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,eAAgBO,EAA/B,EAA+BA,UAEzBU,GAFN,EAA0CT,eAEtBT,EAAM,IAG1B,GAFAtG,QAAQC,IAAIuH,EAAa,eAErBA,GAAepB,EAAa,KAAK,CACnC,IAAMsB,EAAQ,aAAOpB,EAAMqB,MAAM,IACjC3H,QAAQC,IAAIyH,EAAU,YACtB1H,QAAQC,IAAIyH,EAASH,OAAQ,mBAC7B,IAAMK,EAAiB,uBAAOrB,GAAP,CAAuBiB,IAC9CxH,QAAQC,IAAI2H,EAAmB,qBAC/B5H,QAAQC,IAAI,oBACZ,IAAMgI,EAAenB,EAAU,EAGzBD,EACHe,EAAkBL,QAChBG,EAASH,OAASK,EAAkBL,QACvC,IACF,EAAKhH,SAAS,CACZ+F,MAAOoB,EACPnB,eAAgBqB,EAChBxB,WAAY,GACZI,UAA+B,IAApBkB,EAASH,OACpBV,SAAUA,EACVC,UAAWmB,EACXlB,eAAgB,KAItB,EAAKe,gB,EAGPA,aAAe,WACb,MAAsC,EAAKxI,MAAnCmH,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,eACbc,EAAMD,KAAKC,MACXa,GAAQb,EAAMZ,GAAa,IAAO,GACxCzG,QAAQC,IAAIoH,EAAK,OACjBrH,QAAQC,IAAIwG,EAAW,aACvBzG,QAAQC,IAAIiI,EAAM,QAClBlI,QAAQC,IAAI,kBAKZ,IAAMkI,EAAaC,KAAKC,KACtB9B,EAAe+B,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,EAAKjB,SAAS,GAAK,GAElEvH,QAAQC,IAAIsG,EAAgB,kBAC5BvG,QAAQC,IAAIkI,EAAY,cACxBnI,QAAQC,IAAI,gBAGZ,IAAM0G,EAAMyB,KAAKC,KAAKF,EAAaD,GAEnC,EAAK3H,SAAS,CACZoG,IAAKA,EACLD,YAAawB,K,uDAlJjB,WACE,IAAIvI,EAAWnG,OAAOoG,SAAS1G,KAC/B8G,QAAQC,IAAIN,GACZ,IAAM8I,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM1C,KAAKC,UAAU,CAAE0F,OAAQtG,KAAKP,MAAM6G,OAAOpG,OAAO,EAAG,IAAK6I,UAAW/I,KAAKP,MAAM4G,UAG1FhG,MAAMP,EAAU8I,GACXI,OAAM,SAAAC,GAAG,OAAI9I,QAAQ+I,MAAMD,Q,oBA4IhC,WACE,MAWIjJ,KAAKP,MAVP9B,EADF,EACEA,KACA4I,EAFF,EAEEA,WAEAO,GAJF,EAGEJ,eAHF,EAIEI,KACAD,EALF,EAKEA,YACAE,EANF,EAMEA,QACAJ,EAPF,EAOEA,UACAK,EARF,EAQEA,SACAC,EATF,EASEA,UACAC,EAVF,EAUEA,eAGF,OAAKH,EAoBApJ,EAEDgJ,EAEA,sBAAKlL,UAAU,YAAf,UACE,8CACc,iCAASqL,OAEvB,wBAAQrL,UAAU,YAAYU,QAAS6D,KAAKsH,UAA5C,2BAQJ,gCACE,sBAAK7L,UAAU,MAAf,UACE,2CACCqL,EACD,uBACA,4CACCyB,KAAKY,MAAoB,GAAdtC,GALd,OAOA,sBAAKpL,UAAU,YAAf,UACE,qDACA,0BAAUsJ,MAAOiC,EAAUoC,IAAI,QAC/B,mBAAG3N,UAAU,OAAb,SACGkC,EAAKyJ,MAAM,MAAMvF,KAAI,SAACwH,EAAMC,GAE3B,IADA,IAAIC,EAAS,EACJC,EAAI,EAAGA,EAAIH,EAAK3B,QACR,KAAX2B,EAAKG,GADsBA,IAE7BD,IAMJ,OACA,8BACCF,EAAKjC,MAAM,KAAKvF,KAAI,SAAC8G,EAAMc,GAC1B,IAAIC,GAAY,EACZ/B,GAAc,EAWlB,OARKT,EAAeqC,EAASE,GAASH,GAAUrC,GAAcqC,EAASrC,KACrEyC,GAAY,GAGVxC,EAAeqC,IAAWE,GAASxC,GAAaqC,IAClD3B,GAAc,GAId,sBACElM,UAAS,mDACOiO,GAAa,QADpB,gDAEO/B,GAAe,aAHjC,SAMGgB,EAAKvB,MAAM,IAAIvF,KAAI,SAAC8H,EAAQC,GAC3B,IAAMC,EAAgBJ,IAAUvC,EAAeqC,GAAUD,GAAUrC,EAC7D6C,EAAiBH,IAAWpD,EAAWqD,IAAUN,GAAUrC,EAC3D8C,EAAsBH,EAAQrD,EAAWmB,QAAU4B,GAAUrC,EAEnE,OACE,sBACExL,UAAS,iBACPoO,GAAiBE,EACbD,EACE,MACA,QACF,IANR,SAUGH,GAFIC,OAhBNH,OAnBCH,QAgDhB,uBACE3M,KAAK,OACLiI,SAAU5E,KAAKyH,aACfuC,WAAYhK,KAAKkI,gBACjBnD,MAAOwB,EAEP0D,WAAW,UA7FD,2CAlBd,sBAAKxO,UAAU,YAAf,UACE,4DACA,8BACE,4CADF,IAC0B,uBAD1B,iDAEgD,uBAFhD,+BAG8B,sBAAMA,UAAU,QAAhB,mBAH9B,IAIE,uBAJF,+BAK8B,sBAAMA,UAAU,MAAhB,iBAL9B,IAME,uBACA,uBAPF,eAUA,wBAAQA,UAAU,YAAYU,QAAS6D,KAAKsH,UAA5C,+B,GApMoBjG,aA+Sf+E,MC7SA,SAAS8D,GAAiBC,GAExCzF,qBAAU,WACT0F,IACMjK,QAAQC,IAAI+J,EAAMA,MAAME,OAAO1E,OACnC,IAEH,MAAwBzB,mBAAS,IAAjC,mBAAaoG,GAAb,WACA,EAAwBpG,mBAAS,IAAjC,mBAAOqG,EAAP,KAAaC,EAAb,KACA,EAAqBtG,qBAArB,mBAAOyB,EAAP,KAAY8E,EAAZ,KAEML,EAAS,yCAAG,mCAAA5F,EAAA,sEACOnE,MAAM,0DADb,cACX+J,EADW,gBAGQA,EAAU5J,OAHlB,OAejB,IAZYgC,EAHK,OAIX8H,EAAQ9H,GACRrC,QAAQC,IAAIoC,GAClBrC,QAAQC,IAAIoC,EAAK,IACjBrC,QAAQC,IAAIoC,EAAK,GAAG+H,MAKpBpK,QAAQC,IAAImK,GACZpK,QAAQC,WAAWmK,GAEXf,EAAI,EAAGA,EAAIhH,EAAKkF,OAAQ8B,KAC3BkB,EAAMlI,EAAKgH,IACP7D,MAASwE,EAAMA,MAAME,OAAO1E,MAEnCxF,QAAQC,IAAIsK,GACZF,EAAQE,EAAIH,MACZE,EAAMC,EAAI/E,MAGZxF,QAAQC,IAAIuF,GAxBK,4CAAH,qDA0Bf,GAAY,KAAT4E,EAAY,CAEf,IAAMnP,EAAO3B,IACb,OACC,cAAC2C,EAAD,CAAQhB,KAAQA,EAAhB,SACC,cAAC,GAAD,CAAiBuC,KAAM4M,EAAMlE,OAAQV,MAIxC,OACC,wBC/Cc,SAASgF,GAAgBR,GAEvCzF,qBAAU,WACT0F,MAEE,IAEH,MAAwBlG,mBAAS,IAAjC,mBAAaoG,GAAb,WACA,EAAwBpG,mBAAS,IAAjC,mBAAOqG,EAAP,KAAaC,EAAb,KACA,EAAqBtG,mBAAS,IAA9B,mBAAOyB,EAAP,KAAY8E,EAAZ,KAEML,EAAS,yCAAG,mCAAA5F,EAAA,sEACOnE,MAAM,yDADb,cACX+J,EADW,gBAGQA,EAAU5J,OAHlB,OAejB,IAZYgC,EAHK,OAIX8H,EAAQ9H,GAUdrC,QAAQC,IAAI,WAAa+J,EAAMA,MAAME,OAAO1E,KACpC6D,EAAI,EAAGA,EAAIhH,EAAKkF,OAAQ8B,KAC3BkB,EAAMlI,EAAKgH,IACP7D,KAAQwE,EAAMA,MAAME,OAAO1E,MAGlC6E,EAAQE,EAAIH,MAEZE,EAAMC,EAAI/E,KACVxF,QAAQC,IAAIsK,EAAI/E,MAGlBxF,QAAQC,IAAIuF,GA1BK,4CAAH,qDA+Bf,GAFAxF,QAAQC,IAAI,SAAWmK,GAEX,KAATA,GAAsB,IAAP5E,EAAU,CAE5B,IAAMvK,EAAO3B,IAGb,OAFA0G,QAAQC,IAAI,SAAWmK,GACvBpK,QAAQC,IAAI,OAASuF,GAEpB,cAACvJ,EAAD,CAAQhB,KAAQA,EAAhB,SACC,cAAC,GAAD,CAAiBuC,KAAM4M,EAAMlE,OAAQV,EAAKW,OAAUlL,EAAKf,OAI5D,OACC,wBCtDc,SAASuQ,GAAmBT,GAE1CzF,qBAAU,WACT0F,IACMjK,QAAQC,IAAI+J,EAAMA,MAAME,OAAO1E,OACnC,IAEH,MAAwBzB,mBAAS,IAAjC,mBAAaoG,GAAb,WACA,EAAwBpG,mBAAS,IAAjC,mBAAOqG,EAAP,KAAaC,EAAb,KACA,EAAqBtG,qBAArB,mBAAOyB,EAAP,KAAY8E,EAAZ,KAEML,EAAS,yCAAG,mCAAA5F,EAAA,sEACOnE,MAAM,4DADb,cACX+J,EADW,gBAGQA,EAAU5J,OAHlB,OAejB,IAZYgC,EAHK,OAIX8H,EAAQ9H,GACRrC,QAAQC,IAAIoC,GAClBrC,QAAQC,IAAIoC,EAAK,IACjBrC,QAAQC,IAAIoC,EAAK,GAAG+H,MAKpBpK,QAAQC,IAAImK,GACZpK,QAAQC,WAAWmK,GAEXf,EAAI,EAAGA,EAAIhH,EAAKkF,OAAQ8B,KAC3BkB,EAAMlI,EAAKgH,IACP7D,MAASwE,EAAMA,MAAME,OAAO1E,MAEnCxF,QAAQC,IAAIsK,GACZF,EAAQE,EAAIH,MACZE,EAAMC,EAAI/E,MAGZxF,QAAQC,IAAIuF,GAxBK,4CAAH,qDA0Bf,GAAW,KAAR4E,EAAW,CAEd,IAAMnP,EAAO3B,IACb,OACC,cAAC2C,EAAD,CAAQhB,KAAQA,EAAhB,SACC,cAAC,GAAD,CAAiBuC,KAAM4M,EAAMlE,OAAQV,MAIxC,OACC,wB,qBCpCc,SAASkF,KACtB,MAAoC3G,mBAAS,MAA7C,mBAAOlK,EAAP,KAAmB8Q,EAAnB,KACMC,EAASC,SAASC,cAAc,UA4BtC,SAASC,EAAa/P,GACpB,IAAQ8J,EAAuB9J,EAAvB8J,UAAckG,EAAtB,YAA+BhQ,EAA/B,IACA,OAAO,cAAC,IAAD,2BAAWgQ,GAAX,IAAiBlG,UAAWjL,EAAaiL,EAAYmG,KAG9D,OAhCAL,EAAOjP,IAAM,yCACbiP,EAAOM,OAAS,kBAId1R,OAAOC,KAAK0R,KAAK,SAAS,WACxB3R,OAAOC,KAAKC,MACT0R,KAAK,CACJC,UAAWC,6EAEZnL,MAAK,WACJ,IAAMxG,EAAeH,OAAOC,KAAKC,MAAME,kBACjCC,EAAaF,EAAaE,WAAWC,MAC3C6Q,EAAc9Q,GAEdF,EAAaE,WAAW0R,QAAO,SAAC1R,GAC9B8Q,EAAc9Q,iBAItBL,OAAOC,KAAK0R,KAAK,WAAW,WAC1B3R,OAAOC,KAAK+R,QAAQC,OAAO,eAAgB,CACzC7I,MAAO,aApBbiI,SAAS3H,KAAKwI,YAAYd,GA8BP,OAAf/Q,EAEA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8R,OAAK,EAACC,KAAK,IAAI9G,UAAWpI,IACjC,cAACqO,EAAD,CAAcY,OAAK,EAACC,KAAK,WAAW9G,UAAW3D,IAC/C,cAAC,IAAD,CAAOwK,OAAK,EAACC,KAAK,YAAY9G,UAAWvC,KAEzC,cAAC,IAAD,CAAOqJ,KAAK,QAAQD,OAAK,EAAC7G,UAAWc,KACrC,cAAC,IAAD,CAAOgG,KAAK,OAAOD,OAAK,EAAC7G,UAAWgB,KACpC,cAAC,IAAD,CAAO8F,KAAK,UAAUD,OAAK,EAAC7G,UAAWkB,KAEvC,cAAC,IAAD,CAAO4F,KAAK,aAAa9G,UAAWiF,KACpC,cAAC,IAAD,CAAO6B,KAAK,YAAY9G,UAAW0F,KACnC,cAAC,IAAD,CAAOoB,KAAK,eAAe9G,UAAW2F,KAEtC,cAAC,IAAD,CAAOmB,KAAK,IAAI9G,UAAWzD,SAM5B,cAACzI,EAAD,I,OCnETiT,IAASJ,OAAO,cAACf,GAAD,IAASG,SAASiB,eAAe,W","file":"static/js/main.2f8da8dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst CheckingSignedInWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport default function CheckingSignedIn() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">Code Per Minute</Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n      <CheckingSignedInWrapper>\r\n        <Spinner animation=\"border\" role=\"status\" />\r\n      </CheckingSignedInWrapper>\r\n    </>\r\n  );\r\n}\r\n","export default function getUser() {\r\n  if (window.gapi === undefined || window.gapi.auth2 === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const authInstance = window.gapi.auth2.getAuthInstance();\r\n  const isSignedIn = authInstance.isSignedIn.get();\r\n\r\n  if (isSignedIn === false) {\r\n    return null;\r\n  }\r\n\r\n  const profile = authInstance.currentUser.get().getBasicProfile();\r\n  const user = {\r\n    id: profile.getId(),\r\n    fullName: profile.getName(),\r\n    givenName: profile.getGivenName(),\r\n    familyName: profile.getFamilyName(),\r\n    imageUrl: profile.getImageUrl(),\r\n    email: profile.getEmail(),\r\n    signOut: authInstance.signOut,\r\n  };\r\n\r\n  return user;\r\n}\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nexport default function NavBar(props) {\r\n  const user = props.user;\r\n\r\n  return (\r\n    <Navbar data-testid=\"NavBar\" bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">CodePerMinute</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <NavDropdown title=\"Language\">\r\n              <NavDropdown.Item href=\"/Cpp\">C++</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Java\">Java</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Python\">Python</NavDropdown.Item>\r\n            </NavDropdown>\r\n            {user && <Nav.Link href=\"/profile\">Profile</Nav.Link>}\r\n          </Nav>\r\n          <Nav>\r\n            {!user ? (\r\n              <div id=\"login-button\" />\r\n            ) : (\r\n              <NavDropdown\r\n                title={\r\n                  <span>\r\n                    Hello, {user.fullName}{\" \"}\r\n                    <img\r\n                      src={user.imageUrl}\r\n                      alt=\"profile\"\r\n                      style={{ width: \"24px\", height: \"24px\" }}\r\n                    />{\" \"}\r\n                  </span>\r\n                }\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item onClick={user.signOut}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}","import NavBar from \"./NavBar\";\r\n\r\nexport default function Layout(props) {\r\n  const user = props.user;\r\n\r\n  return (\r\n    <div>\r\n      <NavBar user={user} />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/video.321fe793.mp4\";","import React from \"react\";\r\nimport './HomeSection.css'\r\nimport Video from \"../images/video.mp4\"; \r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeSection() {\r\n    return (\r\n        <div className='home-container'>\r\n            <video controls autostart autoPlay src={Video} type=\"video/mp4\" autoPlay loop muted />\r\n            <h1>TYPING TEST FOR PROGRAMMERS</h1>\r\n            <p>Improve your typing skills with this website</p>\r\n            <Link to=\"/Language\">\r\n                <button1>\r\n                    Start Typing\r\n                </button1>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeSection","import React from \"react\";\r\n\r\nimport getUser from \"../utils/get-user\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CardContent from '@mui/material/CardContent';\r\nimport HomeSection from \"../components/HomeSection\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\n\r\nexport default function Home() {\r\n  const user = getUser();\r\n\r\n  return (\r\n    <Layout user={user}>\r\n      <HomeSection/>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography sx={{mb:1.5}} variant=\"h5\" color= \"#3699cf\">\r\n            What is TypingTest?\r\n          </Typography>\r\n          <Typography variant='p'>\r\n          It's a webapp that helps improve coding speed and gauge coding level. We will include a clock and accuracy in our API. The user can choose the language and difficulty of the coding problems and we want to expand it into a more code learning web by adding some questions so users can think about while they are coding to improve the coding skills.\r\n          </Typography>\r\n        </CardContent> \r\n      </Card>\r\n    </Layout>\r\n  );\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\n\r\nconst CircleContainer = styled.div`\r\n  display: inline-block;\r\n  border-radius: 100%;\r\n  position: relative;`\r\n\r\nconst PercentageContainer = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center,`\r\n\r\nconst StyledCircle = styled.circle`\r\n  transform: rotate(-90deg);\r\n  transform-origin: 50% 50%;`\r\n// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\r\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\r\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\r\n\r\nconst Circle = ({\r\n  percentage,\r\n  text,\r\n  width,\r\n  strokeWidth,\r\n  fontSize,\r\n  fontColor,\r\n  fontFamily,\r\n  primaryColor,\r\n  secondaryColor,\r\n  fill,\r\n  hidePercentageText,\r\n  strokeLinecap,\r\n}) => {\r\n  const PI = 3.14\r\n  const R = (width / 2) - (strokeWidth * 2)\r\n\r\n  let circumference = 2 * PI * R\r\n  let offset = circumference - percentage / 100 * circumference\r\n  let gradientId = `${primaryColor[0]}${primaryColor[1]}`.replace(/#/g, '')\r\n\r\n  return (\r\n    <CircleContainer\r\n      className=\"react-super-progressbar__base\"\r\n      style={{\r\n        height: `${width}px`,\r\n        width: `${width}px`,\r\n      }}\r\n    >\r\n      {!hidePercentageText ?\r\n        <PercentageContainer className=\"react-super-progressbar__percentage-container\">\r\n          <span\r\n            className=\"react-super-progressbars__percentage\"\r\n            style={{\r\n              fontSize,\r\n              fontFamily,\r\n              color: fontColor,\r\n            }}\r\n          >\r\n            {percentage}%\r\n            <br/>\r\n            {text}\r\n          </span>\r\n        </PercentageContainer>\r\n        : null\r\n      }\r\n\r\n      <svg\r\n        width='100%'\r\n        height='100%'\r\n        version='1.1'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <linearGradient\r\n          id={gradientId}\r\n          x1='0%'\r\n          y1='0%'\r\n          x2='100%'\r\n          y2='100%'\r\n        >\r\n          <stop offset='0%' stopColor={primaryColor[0]}/>\r\n          <stop offset='100%' stopColor={primaryColor[1]}/>\r\n        </linearGradient>\r\n        <circle\r\n          strokeWidth={strokeWidth}\r\n          fill='transparent'\r\n          r={R}\r\n          cx={width / 2}\r\n          cy={width / 2}\r\n          stroke={secondaryColor}\r\n          strokeDasharray={`${circumference} ${circumference}`}\r\n        />\r\n        <StyledCircle\r\n          strokeWidth={strokeWidth}\r\n          fill={fill}\r\n          r={R}\r\n          cx={width / 2}\r\n          cy={width / 2}\r\n          stroke={`url(#${gradientId})`}\r\n          strokeLinecap={strokeLinecap}\r\n          strokeDasharray={`${circumference} ${circumference}`}\r\n          strokeDashoffset={offset}\r\n        />\r\n      </svg>\r\n    </CircleContainer>\r\n  )\r\n}\r\n\r\nCircle.propTypes = {\r\n  percentage: PropTypes.number.isRequired,\r\n  width: PropTypes.number,\r\n  strokeWidth: PropTypes.number,\r\n  strokeLinecap: PropTypes.oneOf(['round', 'square', 'butt']),\r\n  fontSize: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  fontFamily: PropTypes.string,\r\n  primaryColor: PropTypes.array,\r\n  secondaryColor: PropTypes.string,\r\n  fill: PropTypes.string,\r\n  hidePercentageText: PropTypes.bool,\r\n  text: PropTypes.string,\r\n}\r\n\r\nCircle.defaultProps = {\r\n  width: 365,\r\n  strokeWidth: 5,\r\n  strokeLinecap: 'round',\r\n  fontSize: 'inherit',\r\n  fontColor: 'inherit',\r\n  fontFamily: 'inherit',\r\n  primaryColor: ['#00BBFF', '#92d7f1'],\r\n  secondaryColor: 'transparent',\r\n  fill: 'transparent',\r\n}\r\n\r\nexport default Circle","import React, { Component, useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport Circle from \"./Circle\"\r\nclass UserData extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    easyProblems: 0,\r\n    mediumProblems: 0,\r\n    hardProblems: 0,\r\n    listOfProblems: []\r\n  };\r\n  componentDidMount(){\r\n    var fetchURL = window.location.href\r\n    fetchURL += '/'\r\n    fetchURL += this.state.user.id.toString().substr(0, 17)\r\n    console.log(fetchURL)\r\n    fetch(fetchURL)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({easyProblems: JSON.stringify(data[0].Easy), mediumProblems: JSON.stringify(data[0].Medium), hardProblems: JSON.stringify(data[0].Hard), listOfProblems: JSON.stringify(data[0].problemsSolved)})\r\n      })\r\n    }\r\n    render(){\r\n      const easy = this.state.easyProblems;\r\n      const medium = this.state.mediumProblems;\r\n      const hard = this.state.hardProblems;\r\n      //const problems = this.state.listOfProblems;\r\n      //console.log(\"problem length:\", problems.length);\r\n      /*for (let i=0; i<this.state.listOfProblems.length; i++)\r\n      {\r\n        var fetchURL = window.location.href;\r\n        fetchURL = fetchURL.replace(\"profile\", \"codesnippetID/\");\r\n        fetchURL += this.state.listOfProblems[i];\r\n        fetch(fetchURL)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          problems[i] = data.name;\r\n        })\r\n      }*/\r\n        return(\r\n            <>\r\n                <h1>Welcome back {this.state.user.fullName}!</h1>\r\n                <div>\r\n                  <Circle percentage={(100 * easy/15).toFixed(1)} strokeWidth={7} text=\"Easy\" primaryColor={[\"#AAFFB9\", \"#AAFFB9\"]} secondaryColor=\"#F0F0F0\"/>\r\n                  <Circle percentage={(100 * medium/9).toFixed(1)} text=\"Medium\" strokeWidth={7} secondaryColor=\"#F0F0F0\"/>\r\n                  <Circle percentage={(100 * hard/6).toFixed(1)} text=\"Hard\" strokeWidth={7} primaryColor={[\"#EB1547\", \"#EB1547\"]} secondaryColor=\"#F0F0F0\"/>\r\n                </div>\r\n                <br />\r\n            </>\r\n            );\r\n    }\r\n}\r\nexport default UserData;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Layout from \"../components/Layout\";\r\nimport getUser from \"../utils/get-user\";\r\nimport UserData from \"../components/UserData\";\r\n\r\nexport default function Profile() {\r\n  const user = getUser();\r\n\r\n  return (\r\n    <Layout user={user}>\r\n      <Container>\r\n        <UserData user = {user}/>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\n\r\nexport default function Login() {\r\n  const user = getUser();\r\n\r\n  return (\r\n    <Layout user={user}>\r\n      <Container>\r\n        <h1>This page is private!</h1>\r\n        <div>(meaning you have to login to view the page)</div>\r\n        <br />\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <h1>This page was not found :(</h1>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport \"./LangButton.css\";\r\n\r\nconst langs = [\r\n  {\r\n    id: 1,\r\n    name: 'C++',\r\n    version: 11,\r\n    link: \"/Cpp\",\r\n    dis:\"C++ is a general-purpose programming language created by Bjarne Stroustrup as an extension of the C programming language.\"\r\n   },\r\n  {\r\n    id: 2,\r\n    name: 'Python',\r\n    version: 3,\r\n    link: \"/Python\",\r\n    dis:\"Python is an interpreted high-level general-purpose programming language.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Java',\r\n    version: 17,\r\n    link: \"/Java\",\r\n    dis:\"Java is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.\"\r\n   }\r\n]\r\n  \r\nconst langList = langs.map(lang => (\r\n  <Link to={lang.link}>\r\n    <Card className=\"LangButton\">\r\n      <Typography sx={{ fontSize: 23 }} color='#3699cf' gutterBottom>\r\n        {lang.name}\r\n      </Typography>\r\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n        version.{lang.version}\r\n      </Typography>\r\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n        {lang.dis}\r\n      </Typography>\r\n    </Card>\r\n  </Link>\r\n))\r\n\r\nexport default function OutlinedCard() {\r\n  return (\r\n<Grid\r\n  container\r\n  spacing={0}\r\n  direction=\"column\"\r\n  alignItems=\"center\"\r\n  justifyContent=\"center\"\r\n  style={{ minHeight: '100vh' }}\r\n>\r\n\r\n  <Grid item xs={3}>\r\n   {langList}\r\n  </Grid>   \r\n   \r\n</Grid> \r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/bg.84c3a67e.jpg\";","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport getUser from \"../utils/get-user\";\r\nimport LangCard from \"../utils/LangCard\";\r\nimport background from \"../images/bg.jpg\";\r\n\r\nexport default function Language() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user={user}>\r\n            <div style={{ backgroundImage: `url(${background})` }}>\r\n            <LangCard/>\r\n            </div>\r\n        </Layout>\r\n\r\n    );\r\n}","/*import React from 'react';\r\nimport axios from 'axios';\r\nimport { render } from '@testing-library/react';\r\n\r\nexport default class CodeList extends React.Component {\r\n    state = {\r\n        persons : [],\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('http://127.0.0.1:5000/codesnippet/Java').then(res=> {\r\n            console.log(res);\r\n            this.setState({persons: res.data});\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return this.state.persons.map(person => <li>{person.index}</li>);\r\n    }\r\n}*/\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#3699cf',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst CodeListJava = () => {\r\n  const classes = useStyles();\r\n  const [product, setProduct] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const getProductData = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://code-per-minute.herokuapp.com/codesnippet/Java\"\r\n      );\r\n      console.log(data.data);\r\n      setProduct(data.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductData();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Java</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search here\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {/* {product\r\n        .filter((item) => {\r\n          if (search == \"\") {\r\n            return item;\r\n          } else if (item.name.toLowerCase().includes(search.toLowerCase())) {\r\n            return item;\r\n          }\r\n        })\r\n        .map((item) => {\r\n          return (\r\n            <p>\r\n              {item.name} - {item.price}\r\n            </p>\r\n          );\r\n        })} */}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">Problem Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Problem Index</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Skill</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {product\r\n              .filter((item) => {\r\n                if (search === \"\") {\r\n                  return item;\r\n                } else if (\r\n                  item.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return item;\r\n                }\r\n              })\r\n              .map((item, index) => {\r\n                return (\r\n                  <StyledTableRow key={item.name}>\r\n                    <StyledTableCell align=\"center\">\r\n                      <Link to={`/Java/${item._id}`}>{item.name}</Link>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {item.difficulty}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {item.skillcategory}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeListJava;","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\nimport CodeListJava from \"../components/CodeListJava\";\r\n\r\nexport default function Java() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user = {user}>\r\n            <Container>\r\n                <div>\r\n                    <CodeListJava/>\r\n                </div>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}","\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#3699cf',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst CodeListCpp = () => {\r\n  const classes = useStyles();\r\n  const [product, setProduct] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const getProductData = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://code-per-minute.herokuapp.com/codesnippet/C++\"\r\n      );\r\n      console.log(data.data);\r\n      setProduct(data.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductData();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>C++</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search here\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {/* {product\r\n        .filter((item) => {\r\n          if (search == \"\") {\r\n            return item;\r\n          } else if (item.name.toLowerCase().includes(search.toLowerCase())) {\r\n            return item;\r\n          }\r\n        })\r\n        .map((item) => {\r\n          return (\r\n            <p>\r\n              {item.name} - {item.price}\r\n            </p>\r\n          );\r\n        })} */}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">Problem Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Problem Difficulty</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Skill</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {product\r\n              .filter((item) => {\r\n                if (search === \"\") {\r\n                  return item;\r\n                } else if (\r\n                  item.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return item;\r\n                }\r\n              })\r\n              .map((item, index) => {\r\n                return (\r\n                  <StyledTableRow key={item.name}>\r\n                    <StyledTableCell align=\"center\">\r\n                      <Link to={`/Cpp/${item._id}`}>{item.name}</Link>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {item.difficulty}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {item.skillcategory}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeListCpp;","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\nimport CodeListCpp from \"../components/CodeListCpp\";\r\n\r\nexport default function Cpp() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user = {user}>\r\n            <Container>\r\n                <div>\r\n                    <CodeListCpp/>\r\n                </div>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}","\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#3699cf',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst CodeListPython = () => {\r\n  const classes = useStyles();\r\n  const [product, setProduct] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const getProductData = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://code-per-minute.herokuapp.com/codesnippet/Python\"\r\n      );\r\n      console.log(data.data);\r\n      setProduct(data.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductData();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Python</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search here\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {/* {product\r\n        .filter((item) => {\r\n          if (search == \"\") {\r\n            return item;\r\n          } else if (item.name.toLowerCase().includes(search.toLowerCase())) {\r\n            return item;\r\n          }\r\n        })\r\n        .map((item) => {\r\n          return (\r\n            <p>\r\n              {item.name} - {item.price}\r\n            </p>\r\n          );\r\n        })} */}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">Problem Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Problem Index</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Skill</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {product\r\n              .filter((item) => {\r\n                if (search === \"\") {\r\n                  return item;\r\n                } else if (\r\n                  item.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return item;\r\n                }\r\n              })\r\n              .map((item, index) => {\r\n                return (\r\n                  <StyledTableRow key={item.name}>\r\n                    <StyledTableCell align=\"center\">\r\n                      <Link to={`/Python/${item._id}`}>{item.name}</Link>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {item.difficulty}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {item.skillcategory}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeListPython;","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport getUser from \"../utils/get-user\";\r\nimport CodeListPython from \"../components/CodeListPython\";\r\n\r\nexport default function Python() {\r\n    const user = getUser();\r\n    return (\r\n        <Layout user = {user}>\r\n            <Container>\r\n                <div>\r\n                    <CodeListPython/>\r\n                </div>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}","import React, { Component, useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass TypingComponent extends Component {\r\n  state = {\r\n    text: this.props.text,\r\n    textID: this.props.textID,\r\n    userID: this.props.userID,\r\n    inputValue: \"\",\r\n    lastLetter: \"\",\r\n    words: [],\r\n    completedWords: [],\r\n    completed: false,\r\n    startTime: undefined,\r\n    timeElapsed: 0,\r\n    wpm: 0,\r\n    started: false,\r\n    progress: 0,\r\n    lineCount: 0,\r\n    lineWCompleted: 0\r\n  };\r\n  componentDidMount(){\r\n    var fetchURL = window.location.href\r\n    console.log(fetchURL)\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userID: this.state.userID.substr(0, 17), problemID: this.state.textID}) //userID: this.state.user.id, problemID: this.state.textID\r\n      //body: JSON.stringify({ userID: 43531, problemID: this.state.textID}) //userID: this.state.user.id, problemID: this.state.textID\r\n  };\r\n  fetch(fetchURL, requestOptions)\r\n      .catch(err => console.error(err));\r\n  }\r\n  setText = () => {\r\n    const wordS = this.state.text.replace(/\\n/g, \"\\n \");\r\n    const wordsE = wordS.split(\" \");\r\n    const words = wordsE.filter(x => x != \"\");\r\n    console.log(words);\r\n    this.setState({\r\n      words: words,\r\n      completedWords: []\r\n    });\r\n  };\r\n\r\n  startGame = () => {\r\n    this.setText();\r\n\r\n    this.setState({\r\n      started: true,\r\n      startTime: Date.now(),\r\n      completed: false,\r\n      progress: 0,\r\n      lineCount: 0,\r\n      lineWCompleted: 0\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { words, completedWords, lineWCompleted } = this.state;\r\n    const inputValue = e.target.value;\r\n    const lastLetter = inputValue[inputValue.length - 1];\r\n\r\n    const currentWord = words[0];\r\n    console.log(currentWord, \"currentWord\");\r\n\r\n    // if space or '.', check the word\r\n    if (lastLetter === \" \") {\r\n      // check to see if it matches to the currentWord\r\n      // trim because it has the space\r\n      if (inputValue.trim() === currentWord) {\r\n        // remove the word from the wordsArray\r\n        // cleanUp the input\r\n        const newWords = [...words.slice(1)];\r\n        console.log(newWords, \"newWords\");\r\n        console.log(newWords.length, \"newWords.length\");\r\n        const newCompletedWords = [...completedWords, currentWord];\r\n        console.log(newCompletedWords, \"newCompletedWords\");\r\n        console.log(\"----------------\");\r\n        const newLineWCompleted = lineWCompleted+1;\r\n\r\n        // Get the total progress by checking how much words are left\r\n        const progress =\r\n          (newCompletedWords.length /\r\n            (newWords.length + newCompletedWords.length)) *\r\n          100;\r\n        this.setState({\r\n          words: newWords,\r\n          completedWords: newCompletedWords,\r\n          inputValue: \"\",\r\n          completed: newWords.length === 0,\r\n          progress: progress,\r\n          lineWCompleted: newLineWCompleted\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        inputValue: inputValue,\r\n        lastLetter: lastLetter\r\n      });\r\n      console.log(this.state.inputValue, \"this.state.inputValue\");\r\n      console.log(this.state.lastLetter, \"this.state.lastLetter\");\r\n      console.log(\"================================\");\r\n    }\r\n\r\n    this.calculateWPM();\r\n  };\r\n\r\n  _handleKeyPress = (e) => {\r\n    const inputValue = e.target.value;\r\n    if (e.key === 'Enter'){\r\n      const { words, completedWords, lineCount, lineWCompleted } = this.state;\r\n\r\n      const currentWord = words[0];\r\n      console.log(currentWord, \"currentWord\");\r\n      \r\n      if (currentWord == inputValue + \"\\n\"){\r\n        const newWords = [...words.slice(1)];\r\n        console.log(newWords, \"newWords\");\r\n        console.log(newWords.length, \"newWords.length\");\r\n        const newCompletedWords = [...completedWords, currentWord];\r\n        console.log(newCompletedWords, \"newCompletedWords\");\r\n        console.log(\"----------------\");\r\n        const newLineCount = lineCount+1;\r\n\r\n        // Get the total progress by checking how much words are left\r\n        const progress =\r\n          (newCompletedWords.length /\r\n            (newWords.length + newCompletedWords.length)) *\r\n          100;\r\n        this.setState({\r\n          words: newWords,\r\n          completedWords: newCompletedWords,\r\n          inputValue: \"\",\r\n          completed: newWords.length === 0,\r\n          progress: progress,\r\n          lineCount: newLineCount,\r\n          lineWCompleted: 0\r\n        });\r\n      }\r\n    }\r\n    this.calculateWPM();\r\n  } \r\n\r\n  calculateWPM = () => {\r\n    const { startTime, completedWords } = this.state;\r\n    const now = Date.now();\r\n    const diff = (now - startTime) / 1000 / 60; // 1000 ms / 60 s\r\n    console.log(now, \"now\");\r\n    console.log(startTime, \"startTime\");\r\n    console.log(diff, \"diff\");\r\n    console.log(\"**************\");\r\n\r\n    // every word is considered to have 5 letters\r\n    // so here we are getting all the letters in the words and divide them by 5\r\n    // \"my\" shouldn't be counted as same as \"deinstitutionalization\"\r\n    const wordsTyped = Math.ceil(\r\n      completedWords.reduce((acc, word) => (acc += word.length), 0) / 5\r\n    );\r\n    console.log(completedWords, \"completedWords\");\r\n    console.log(wordsTyped, \"wordsTyped\");\r\n    console.log(\"+=+=+=+=+=+=\");\r\n\r\n    // calculating the wpm\r\n    const wpm = Math.ceil(wordsTyped / diff);\r\n\r\n    this.setState({\r\n      wpm: wpm,\r\n      timeElapsed: diff\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      text,\r\n      inputValue,\r\n      completedWords,\r\n      wpm,\r\n      timeElapsed,\r\n      started,\r\n      completed,\r\n      progress,\r\n      lineCount,\r\n      lineWCompleted\r\n    } = this.state;\r\n\r\n    if (!started)\r\n      return (\r\n        <div className=\"container\">\r\n          <h2>Welcome to the Typing game</h2>\r\n          <p>\r\n            <strong>Rules:</strong> <br />\r\n            Type in the input field the highlighted word. <br />\r\n            The correct words will turn <span className=\"green\">green</span>.\r\n            <br />\r\n            Incorrect letters will turn <span className=\"red\">red</span>.\r\n            <br />\r\n            <br />\r\n            Have fun!\r\n          </p>\r\n          <button className=\"start-btn\" onClick={this.startGame}>\r\n            Start game\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n    if (!text) return <p>Loading...</p>;\r\n\r\n    if (completed) {\r\n      return (\r\n        <div className=\"container\">\r\n          <h2>\r\n            Your WPM is <strong>{wpm}</strong>\r\n          </h2>\r\n          <button className=\"start-btn\" onClick={this.startGame}>\r\n            Play again\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"wpm\">\r\n          <strong>WPM: </strong>\r\n          {wpm}\r\n          <br />\r\n          <strong>Time: </strong>\r\n          {Math.floor(timeElapsed * 60)}s\r\n        </div>\r\n        <div className=\"container\">\r\n          <h4>Type the text below</h4>\r\n          <progress value={progress} max=\"100\" />\r\n          <p className=\"text\">\r\n            {text.split(\"\\n\").map((line, li_idx) => {\r\n              let indent = 0;\r\n              for (let i = 0; i < line.length; i++){\r\n                if (line[i] == \" \"){\r\n                  indent++;\r\n                }\r\n                else{\r\n                  break;\r\n                }\r\n              }\r\n              return(\r\n              <div key = {li_idx}>\r\n              {line.split(\" \").map((word, w_idx) => {\r\n                let highlight = false;\r\n                let currentWord = false;\r\n\r\n                // this means that the word is completed, so turn it green\r\n                if ((lineWCompleted+indent > w_idx && li_idx == lineCount) || li_idx < lineCount) {\r\n                  highlight = true;\r\n                }\r\n\r\n                if (lineWCompleted+indent === w_idx && lineCount == li_idx) {\r\n                  currentWord = true;\r\n                }\r\n\r\n                return (\r\n                  <span\r\n                    className={`word \r\n                                  ${highlight && \"green\"} \r\n                                  ${currentWord && \"underline\"}`}\r\n                    key={w_idx}\r\n                  >\r\n                    {word.split(\"\").map((letter, l_idx) => {\r\n                      const isCurrentWord = w_idx === lineWCompleted+indent && li_idx == lineCount;\r\n                      const isWronglyTyped = letter !== inputValue[l_idx] && li_idx == lineCount;\r\n                      const shouldBeHighlighted = l_idx < inputValue.length && li_idx == lineCount;\r\n\r\n                      return (\r\n                        <span\r\n                          className={`letter ${\r\n                            isCurrentWord && shouldBeHighlighted\r\n                              ? isWronglyTyped\r\n                                ? \"red\"\r\n                                : \"green\"\r\n                              : \"\"\r\n                          }`}\r\n                          key={l_idx}\r\n                        >\r\n                          {letter}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  </span>\r\n                );\r\n              })}\r\n              </div>\r\n              );\r\n            })}\r\n            </p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            onKeyPress={this._handleKeyPress}\r\n            value={inputValue}\r\n            // autoFocus={started ? 'true' : 'false'}\r\n            autoFocus={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypingComponent;","import React, {useState, useEffect } from 'react';\r\nimport TypingComponent from '../components/TypingComponent';\r\nimport getUser from \"./get-user\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function CodePracticeJava(match) {\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchItem();\r\n        console.log(match.match.params._id);\r\n\t}, []);\r\n\r\n\tconst [item, setItem] = useState([]); \r\n\tconst [code, setCode] = useState(\"\"); \r\n\tconst [_id, setID] = useState();\r\n    \r\n\tconst fetchItem = async () => {\r\n\t\tconst fetchItem = await fetch(`https://code-per-minute.herokuapp.com/codesnippet/Java`\r\n        );\r\n        const item = await fetchItem.json();\r\n        setItem(item);\r\n        console.log(item);\r\n\t\tconsole.log(item[0]);\r\n\t\tconsole.log(item[0].code);\r\n\t\t//console.log(item[match.match.params._id].code);\r\n\t\t//console.log(typeof item[0].code)\r\n\t\t//const code = item[match.match.params._id].code;\r\n\t\t//setCode(code)\r\n\t\tconsole.log(code);\r\n\t\tconsole.log(typeof code)\r\n\r\n\t\tfor(var i = 0; i < item.length; i++) {\r\n\t\t\tvar obj = item[i];\r\n\t\t\tif (obj._id  === match.match.params._id)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(obj);\r\n\t\t\t\tsetCode(obj.code)\r\n\t\t\t\tsetID(obj._id)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(_id)\r\n\t}\r\n\tif(code !== \"\"){\r\n\t\r\n\tconst user = getUser();\r\n\treturn (\r\n\t\t<Layout user = {user}>\r\n\t\t\t<TypingComponent text={code} textID={_id}/>\r\n\t\t</Layout>\r\n\t);\r\n}\r\nreturn (\r\n\t<div></div>\r\n)\r\n}","import React, {useState, useEffect } from 'react';\r\nimport TypingComponent from '../components/TypingComponent';\r\nimport getUser from \"./get-user\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function CodePracticeCpp(match) {\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchItem();\r\n        //console.log(match.match.params._id);\r\n\t}, []);\r\n\r\n\tconst [item, setItem] = useState([]); \r\n\tconst [code, setCode] = useState(\"\"); \r\n\tconst [_id, setID] = useState(\"\");\r\n    \r\n\tconst fetchItem = async () => {\r\n\t\tconst fetchItem = await fetch(`https://code-per-minute.herokuapp.com/codesnippet/C++`\r\n        );\r\n        const item = await fetchItem.json();\r\n        setItem(item);\r\n        //console.log(item);\r\n\t\t//console.log(item[0]);\r\n\t\t//console.log(item[0].code);\r\n\t\t//console.log(item[match.match.params._id].code);\r\n\t\t//console.log(typeof item[0].code)\r\n\t\t//const code = item[match.match.params._id].code;\r\n\t\t//setCode(code)\r\n\t\t//console.log(code);\r\n\t\t//console.log(typeof code)\r\n\t\tconsole.log(\"MATCHES:\" , match.match.params._id);\r\n\t\tfor(var i = 0; i < item.length; i++) {\r\n\t\t\tvar obj = item[i];\r\n\t\t\tif (obj._id  == match.match.params._id)\r\n\t\t\t{\r\n\t\t\t\t//.log(obj);\r\n\t\t\t\tsetCode(obj.code);\r\n\t\t\t\t//console.log(obj.code);\r\n\t\t\t\tsetID(obj._id);\r\n\t\t\t\tconsole.log(obj._id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(_id);\r\n\t}\r\n\r\n\tconsole.log(\"CODE1:\" + code);\r\n\r\n\tif(code !== \"\" && _id != \"\"){\r\n\t\r\n\tconst user = getUser();\r\n\tconsole.log(\"CODE2:\" + code);\r\n\tconsole.log(\"ID: \" + _id);\r\n\treturn (\r\n\t\t<Layout user = {user}>\r\n\t\t\t<TypingComponent text={code} textID={_id} userID = {user.id}/>\r\n\t\t</Layout>\r\n\t);\r\n}\r\nreturn (\r\n\t<div></div>\r\n)\r\n}","import React, {useState, useEffect } from 'react';\r\nimport TypingComponent from '../components/TypingComponent';\r\nimport getUser from \"./get-user\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function CodePracticePython(match) {\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchItem();\r\n        console.log(match.match.params._id);\r\n\t}, []);\r\n\r\n\tconst [item, setItem] = useState([]); \r\n\tconst [code, setCode] = useState(\"\"); \r\n\tconst [_id, setID] = useState();\r\n    \r\n\tconst fetchItem = async () => {\r\n\t\tconst fetchItem = await fetch(`https://code-per-minute.herokuapp.com/codesnippet/Python`\r\n        );\r\n        const item = await fetchItem.json();\r\n        setItem(item);\r\n        console.log(item);\r\n\t\tconsole.log(item[0]);\r\n\t\tconsole.log(item[0].code);\r\n\t\t//console.log(item[match.match.params._id].code);\r\n\t\t//console.log(typeof item[0].code)\r\n\t\t//const code = item[match.match.params._id].code;\r\n\t\t//setCode(code)\r\n\t\tconsole.log(code);\r\n\t\tconsole.log(typeof code)\r\n\r\n\t\tfor(var i = 0; i < item.length; i++) {\r\n\t\t\tvar obj = item[i];\r\n\t\t\tif (obj._id  === match.match.params._id)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(obj);\r\n\t\t\t\tsetCode(obj.code)\r\n\t\t\t\tsetID(obj._id)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(_id)\r\n\t}\r\n\tif(code !==\"\"){\r\n\t\r\n\tconst user = getUser();\r\n\treturn (\r\n\t\t<Layout user = {user}>\r\n\t\t\t<TypingComponent text={code} textID={_id}/>\r\n\t\t</Layout>\r\n\t);\r\n}\r\nreturn (\r\n\t<div></div>\r\n)\r\n}","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport CheckingSignedIn from \"./pages/CheckingSignedIn\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Private from \"./pages/Private\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport Language from \"./pages/ Language\";\r\nimport Java from \"./pages/Java\";\r\nimport Cpp from \"./pages/Cpp\";\r\nimport Python from \"./pages/Python\";\r\nimport CodePracticeJava from \"./utils/CodePracticeJava\";\r\nimport CodePracticeCpp from \"./utils/CodePracticeCpp\";\r\nimport CodePracticePython from \"./utils/CodePracticePython\";\r\n\r\nexport default function App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(null);\r\n  const script = document.createElement(\"script\");\r\n  script.src = \"https://apis.google.com/js/platform.js\";\r\n  script.onload = () => initGoogleSignIn();\r\n  document.body.appendChild(script);\r\n\r\n  function initGoogleSignIn() {\r\n    window.gapi.load(\"auth2\", () => {\r\n      window.gapi.auth2\r\n        .init({\r\n          client_id: process.env.REACT_APP_AUTH_CLIENT_ID,\r\n        })\r\n        .then(() => {\r\n          const authInstance = window.gapi.auth2.getAuthInstance();\r\n          const isSignedIn = authInstance.isSignedIn.get();\r\n          setIsSignedIn(isSignedIn);\r\n\r\n          authInstance.isSignedIn.listen((isSignedIn) => {\r\n            setIsSignedIn(isSignedIn);\r\n          });\r\n        });\r\n    });\r\n    window.gapi.load(\"signin2\", () => {\r\n      window.gapi.signin2.render(\"login-button\", {\r\n        theme: \"dark\",\r\n      });\r\n    });\r\n  }\r\n\r\n  function PrivateRoute(props) {\r\n    const { component, ...rest } = props;\r\n    return <Route {...rest} component={isSignedIn ? component : Private} />;\r\n  }\r\n\r\n  if (isSignedIn !== null) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/language\" component={Language} />\r\n\r\n          <Route path=\"/java\" exact component={Java} />\r\n          <Route path=\"/cpp\" exact component={Cpp} />\r\n          <Route path=\"/python\" exact component={Python}/>\r\n\r\n          <Route path=\"/java/:_id\" component={CodePracticeJava}/>\r\n          <Route path=\"/cpp/:_id\" component={CodePracticeCpp}/>\r\n          <Route path=\"/python/:_id\" component={CodePracticePython}/>\r\n\r\n          <Route path=\"/\" component={PageNotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  return <CheckingSignedIn />;\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}